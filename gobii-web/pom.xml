<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.gobiiproject</groupId>
        <artifactId>parent</artifactId>
        <version>GP1-1527-Epic_FlexQuery</version>
    </parent>

    <groupId>org.gobiiproject</groupId>
    <artifactId>gobii-web</artifactId>
    <packaging>war</packaging>

    <properties>

        <!-- Generic properties -->
        <java.version>1.8</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <!-- Web -->
        <jsp.version>2.2</jsp.version>
        <jstl.version>1.2</jstl.version>
        <servlet.version>2.5</servlet.version>

        <!-- java-script related -->
        <grunt-plugin-version>1.5.1</grunt-plugin-version>

    </properties>


    <dependencies>

        <!-- gobii dependencies -->
        <dependency>
            <groupId>org.gobiiproject</groupId>
            <artifactId>gobii-api-model</artifactId>
        </dependency>

        <dependency>
            <groupId>org.gobiiproject</groupId>
            <artifactId>gobii-brapi</artifactId>
        </dependency>

        <dependency>
            <groupId>org.gobiiproject</groupId>
            <artifactId>gobii-model</artifactId>
        </dependency>

        <dependency>
            <groupId>org.gobiiproject</groupId>
            <artifactId>gobii-domain</artifactId>

            <!--
            **** Ideally we would want to prevent the transitive dependency of gobii-domain on gobii-dao from bringing
            **** the gobii-dao project into the web context: we always want entityaccess to the dao layer to go through the
            **** service layer (which is implemented in the domain). However, if we exclude the dependency, spring
            **** security filter chain initialization fails because the framework class that's consuming the
            **** user detail service can't get supply the user detail service with user dao class. So we're all on
            **** scout's honor to avoid accessing dao directly from anywhere but the service layer.
            -->
            <!--<exclusions>-->
            <!--<exclusion>-->
            <!--<groupId>org.gobiiproject</groupId>-->
            <!--<artifactId>gobii-dao</artifactId>-->
            <!--</exclusion>-->
            <!--</exclusions>-->
        </dependency>

        <!-- Spring WEB -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
        </dependency>

        <!-- Spring MVC -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
        </dependency>

        <!-- Spring and Transactions -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
        </dependency>

        <!--Spring ORM support-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-orm</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.ldap</groupId>
            <artifactId>spring-ldap-core</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-config</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-taglibs</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-ldap</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-crypto</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aspects</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <!-- Spring and Transactions -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-tx</artifactId>
        </dependency>

        <dependency>
            <groupId>org.jboss.logging</groupId>
            <artifactId>jboss-logging</artifactId>
        </dependency>
        <!--Hibernate-->
        <dependency>
            <groupId>org.hibernate.javax.persistence</groupId>
            <artifactId>hibernate-jpa-2.1-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
        </dependency>

        <!-- Test Artifacts -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpcore</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient-cache</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpmime</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>fluent-hc</artifactId>
        </dependency>

        <!-- Liquibase -->
        <dependency>
            <groupId>org.liquibase</groupId>
            <artifactId>liquibase-core</artifactId>
        </dependency>

        <!-- DBCP -->
        <dependency>
            <groupId>commons-dbcp</groupId>
            <artifactId>commons-dbcp</artifactId>
        </dependency>

        <!-- servlet container provided dependencies -->
        <dependency>
            <groupId>org.apache.tomcat</groupId>
            <artifactId>tomcat-servlet-api</artifactId>
        </dependency>

        <!-- Jackson JSON Processor -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
        </dependency>

        <!-- Jackson JSON Mapper -->
        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-mapper-asl</artifactId>
        </dependency>

        <!-- CSV Processor -->
        <dependency>
            <groupId>net.sf.opencsv</groupId>
            <artifactId>opencsv</artifactId>
        </dependency>

        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
        </dependency>

        <!-- UPLOADS -->
        <!-- Apache Commons FileUpload -->
        <dependency>
            <groupId>commons-fileupload</groupId>
            <artifactId>commons-fileupload</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
        </dependency>

    </dependencies>

    <build>
        <finalName>gobii-web</finalName>

        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>

        <plugins>

            <plugin>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <version>9.1.3.v20140225</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.2</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>


            <!--
               Delegates build to "grunt" for several phases
            -->
            <plugin>
                <groupId>pl.allegro</groupId>
                <artifactId>grunt-maven-plugin</artifactId>
                <version>${grunt-plugin-version}</version>
                <configuration>
                    <gruntBuildDirectory>${project.build.directory}/grunt</gruntBuildDirectory>
                </configuration>
                <executions>

                    <!--
                    Maven "validate" phase:
                    This execution will result in running npm install
                    -->
                    <execution>
                        <id>validate</id>
                        <phase>validate</phase>
                        <goals>
                            <!--<goal>create-resources</goal>-->
                            <goal>npm</goal><!-- setup grunt and plugin -->
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.6</version>
                <executions>
                    <execution>
                        <id>prepare-package-nodemodules</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <!-- Copy all generated javascript files into the final directory structure -->
                            <!--<outputDirectory>${project.build.outputDirectory}/${project.artifactId}</outputDirectory>-->
                            <outputDirectory>${project.build.directory}/${project.build.finalName}/js/node_modules
                            </outputDirectory>
                            <resources>
                                <resource>
                                    <!-- Take the node-module code from where npm puts it -->
                                    <directory>${project.basedir}/node_modules/</directory>
                                    <includes>

                                        <!-- *************************************************-->
                                        <!-- deployed javascript libraries to support angular2-->
                                        <!-- ***** GROUP 1: supporting libraries -->
                                        <include>es6-shim/es6-shim.min.js</include>
                                        <include>systemjs/dist/system-polyfills.js</include>
                                        <include>systemjs/dist/system.src.js</include>
                                        <include>rxjs/bundles/Rx.js</include>
                                        <include>bootstrap/dist/css/bootstrap.css</include>
                                        <include>bootswatch/dist/cerulean/bootstrap.css</include>
                                        <include>bootswatch/dist/cosmo/bootstrap.css</include>
                                        <include>bootswatch/dist/cyborg/bootstrap.css</include>
                                        <include>bootswatch/dist/darkly/bootstrap.css</include>
                                        <include>bootswatch/dist/flatly/bootstrap.css</include>
                                        <include>bootswatch/dist/fonts/bootstrap.css</include>
                                        <include>bootswatch/dist/journal/bootstrap.css</include>
                                        <include>bootswatch/dist/lumen/bootstrap.css</include>
                                        <include>bootswatch/dist/paper/bootstrap.css</include>
                                        <include>bootswatch/dist/readable/bootstrap.css</include>
                                        <include>bootswatch/dist/sandstone/bootstrap.css</include>
                                        <include>bootswatch/dist/simplex/bootstrap.css</include>
                                        <include>bootswatch/dist/slate/bootstrap.css</include>
                                        <include>bootswatch/dist/spacelab/bootstrap.css</include>
                                        <include>bootswatch/dist/superhero/bootstrap.css</include>
                                        <include>bootswatch/dist/united/bootstrap.css</include>
                                        <include>bootswatch/dist/yeti/bootstrap.css</include>
                                        <include>zone.js/dist/zone.js</include>
                                        <include>core-js/client/shim.min.js</include>
                                        <include>reflect-metadata/Reflect.js</include>
                                        <include>rxjs/bundles/Rx.js</include>
                                        <include>rxjs/**</include>
                                        <include>ng2-uploader/**</include>
                                        <include>ng2-file-upload/**</include>
                                        <include>primeng/**</include>
                                        <!--<include>primeng/resources/primeng.min.css</include>-->
                                        <!--<include>primeng/resources/themes/omega/theme.css</include>-->
                                        <include>font-awesome/css/font-awesome.min.css</include>
                                        <include>font-awesome/fonts/**</include>
                                        <include>tslib/tslib.js</include>



                                        <!-- ***** GROUP 2: angular bundle files-->
                                        <include>@angular/core/bundles/core.umd.js</include>
                                        <include>@angular/common/bundles/common.umd.js</include>
                                        <include>@angular/common/bundles/common-http.umd.js</include>
                                        <include>@angular/common/http.d.ts</include>
                                        <include>@angular/http/bundles/http.umd.js</include>
                                        <include>@angular/compiler/bundles/compiler.umd.js</include>
                                        <include>@angular/router/bundles/router.umd.js</include>
                                        <include>@angular/platform-browser/bundles/platform-browser.umd.js</include>
                                        <include>@angular/platform-browser/bundles/platform-browser-animations.umd.js</include>
                                        <include>@angular/platform-browser-dynamic/bundles/platform-browser-dynamic.umd.js</include>
                                        <include>@angular/forms/bundles/forms.umd.js</include>
                                        <include>@angular/animations/bundles/animations.umd.js</include>
                                        <include>@angular/animations/bundles/animations-browser.umd.js</include>

                                        <include>@angular/animations/bundles/animations-browser.umd.js</include>@ngrx

                                         ***** GROUP 3: @ngrx bundle files
                                        <include>deep-freeze-strict/index.js</include>
                                        <include>ngrx-store-freeze/dist/index.js</include>
                                        <include>reselect/dist/reselect.js</include>
                                        <include>@ngrx/db/bundles/db.umd.js</include>
                                        <include>@ngrx/effects/bundles/effects.umd.js</include>
                                        <include>@ngrx/router-store/bundles/router-store.umd.js</include>
                                        <include>@ngrx/store/bundles/store.umd.js</include>
                                        <include>@ngrx/store-devtools/bundles/store-devtools.umd.js</include>
                                    </includes>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>