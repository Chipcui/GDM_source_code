{
  "swagger" : "2.0",
  "info" : {
    "description" : "The GOBii web service API provides a comprehensive set of RESTful methods for accomplishing the following core tasks in the GOBii Genomic Data Management (GDM) system. This manual explains the GOBii web architecture and its web service operations.\n\n",
    "version" : "1.0",
    "title" : "GOBii API",
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host" : "localhost:8081",
  "basePath" : "/api",
  "schemes" : [ "http", null ],
  "paths" : {
    "/gobii/v1/analyses" : {
      "get" : {
        "summary" : "Gets all the analyses",
        "description" : "Retrieves an unfiltered list of all Analysis entities. $RequestResponseStructure$",
        "operationId" : "getAnalyses",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeAnalysisDTO"
            }
          }
        }
      },
      "post" : {
        "summary" : "Creates analysis entity",
        "description" : "Creates an analysis entity for GOBii system. $RequestResponseStructure$",
        "operationId" : "createAnalysis",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PayloadEnvelopeAnalysisDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeAnalysisDTO"
            }
          }
        }
      }
    },
    "/gobii/v1/analyses/{analysisId}" : {
      "get" : {
        "summary" : "Gets analysis by Analysis ID",
        "description" : "Retrieves the Analysis entity having the specified ID. $RequestResponseStructure$",
        "operationId" : "getAnalysisById",
        "parameters" : [ {
          "name" : "analysisId",
          "in" : "path",
          "description" : "ID of Analysis to be extracted.",
          "required" : true,
          "type" : "integer",
          "pattern" : "[\\d]+",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeAnalysisDTO"
            }
          }
        }
      },
      "put" : {
        "summary" : "Updates analysis by Analysis ID",
        "description" : "Updates the Analysis entity having the specified analysisId. $RequestResponseStructure$",
        "operationId" : "replaceAnalysis",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PayloadEnvelopeAnalysisDTO"
          }
        }, {
          "name" : "analysisId",
          "in" : "path",
          "description" : "ID of Analysis to be updated",
          "required" : true,
          "type" : "integer",
          "pattern" : "[\\d]+",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeAnalysisDTO"
            }
          }
        }
      }
    },
    "/gobii/v1/auth" : {
      "post" : {
        "summary" : "Authentication service for accessing GOBii System",
        "description" : "The user credentials are specified in the request headers X-Username and X-Password; the response and the response headers include the token in the X-Auth-Token header. this header and value be included in the request headers for subsequent requests. The token value is also supplied in the dtoHeaderAuth object.",
        "operationId" : "authenticate",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/gobii/v1/configsettings" : {
      "get" : {
        "summary" : "Gets the configuration settings for GOBii system",
        "description" : "Provides generic configuration information about the GOBii instances in a given deployment. This call does not require authentication",
        "operationId" : "getConfigSettings",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeConfigSettingsDTO"
            }
          }
        }
      }
    },
    "/gobii/v1/contact-search" : {
      "get" : {
        "summary" : "/contacts-search",
        "description" : "Gets contacts by searching for emailid, lastname, firstname, username.",
        "operationId" : "getContactsBySearch",
        "parameters" : [ {
          "name" : "email",
          "in" : "query",
          "description" : "contact's email",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "lastName",
          "in" : "query",
          "description" : "contact's last name",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "firstName",
          "in" : "query",
          "description" : "contact's first name",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "userName",
          "in" : "query",
          "description" : "contact's user name",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeContactDTO"
            }
          }
        }
      }
    },
    "/gobii/v1/contacts" : {
      "get" : {
        "summary" : "Gets all the contacts in the GOBii system",
        "description" : "Gets all contacts.",
        "operationId" : "getContacts",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeContactDTO"
            }
          }
        }
      },
      "post" : {
        "summary" : "Adds new contact to GOBii system",
        "description" : "Adds new contact.",
        "operationId" : "createContact",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PayloadEnvelopeContactDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeContactDTO"
            }
          }
        }
      }
    },
    "/gobii/v1/contacts/{contactId}" : {
      "get" : {
        "summary" : "Gets contacts by contact ID",
        "description" : "Gets contacts by contact id.",
        "operationId" : "getContactsById",
        "parameters" : [ {
          "name" : "contactId",
          "in" : "path",
          "description" : "ID of contacts to be extracted.",
          "required" : true,
          "type" : "integer",
          "pattern" : "[\\d]+",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeContactDTO"
            }
          }
        }
      },
      "put" : {
        "summary" : "Updates contacts by contact ID",
        "description" : "Updates contacts for a given contact id.",
        "operationId" : "replaceContact",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PayloadEnvelopeContactDTO"
          }
        }, {
          "name" : "contactId",
          "in" : "path",
          "description" : "ID of contacts to be updated.",
          "required" : true,
          "type" : "integer",
          "pattern" : "[\\d]+",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeContactDTO"
            }
          }
        }
      }
    },
    "/gobii/v1/contacts/{email}" : {
      "get" : {
        "summary" : "Gets contacts by email id",
        "description" : "Gets contacts by email id.",
        "operationId" : "getContactsByEmail",
        "parameters" : [ {
          "name" : "email",
          "in" : "path",
          "description" : "email id of contacts to be extracted.",
          "required" : true,
          "type" : "string",
          "pattern" : "[a-zA-Z-]+@[a-zA-Z-]+.[a-zA-Z-]+"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeContactDTO"
            }
          }
        }
      }
    },
    "/gobii/v1/cvgroups/{cvGroupId}/cvs" : {
      "get" : {
        "summary" : "Gets CV terms by CV group ID",
        "description" : "Retrieves all the CV terms having the specified CV group ID",
        "operationId" : "getCvsForCvGroup",
        "parameters" : [ {
          "name" : "cvGroupId",
          "in" : "path",
          "description" : "ID of the CV group.",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeCvDTO"
            }
          }
        }
      }
    },
    "/gobii/v1/cvgroups/{cvGroupTypeId}" : {
      "get" : {
        "summary" : "Gets CV groups by CV group type ID",
        "description" : "Retrieves all CV groups having the specified CV group type ID",
        "operationId" : "getCvGroupsByType",
        "parameters" : [ {
          "name" : "cvGroupdTypeId",
          "in" : "path",
          "description" : "ID of the cv group type",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeCvGroupDTO"
            }
          }
        }
      }
    },
    "/gobii/v1/cvgroups/{groupName}" : {
      "get" : {
        "summary" : "Gets CV Group details given CV group name and type ID",
        "description" : "Retrieves the details for a given CV Group name and type ID",
        "operationId" : "getCvGroupDetails",
        "parameters" : [ {
          "name" : "groupName",
          "in" : "path",
          "description" : "name of the cv group to be extracted",
          "required" : true,
          "type" : "string",
          "pattern" : "[a-zA-Z_]+"
        }, {
          "name" : "cvGroupTypeId",
          "in" : "query",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeCvGroupDTO"
            }
          }
        }
      }
    },
    "/gobii/v1/cvs" : {
      "get" : {
        "summary" : "/cvs",
        "description" : "Gets all cvs in the system.",
        "operationId" : "getCvs",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeCvDTO"
            }
          }
        }
      },
      "post" : {
        "summary" : "/cvs",
        "description" : "Creates new cv's.",
        "operationId" : "createCv",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PayloadEnvelopeCvDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeCvDTO"
            }
          }
        }
      }
    },
    "/gobii/v1/cvs/{cvId}" : {
      "get" : {
        "summary" : "/cvs",
        "description" : "Gets cv by the id.",
        "operationId" : "getCvById",
        "parameters" : [ {
          "name" : "cvId",
          "in" : "path",
          "description" : "ID of the CV to be extracted",
          "required" : true,
          "type" : "integer",
          "pattern" : "[\\d]+",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeCvDTO"
            }
          }
        }
      },
      "put" : {
        "summary" : "/cvs",
        "description" : "Updates cv's by cvId.",
        "operationId" : "replaceCv",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PayloadEnvelopeCvDTO"
          }
        }, {
          "name" : "cvId",
          "in" : "path",
          "description" : "ID of the CV to be updated",
          "required" : true,
          "type" : "integer",
          "pattern" : "[\\d]+",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeCvDTO"
            }
          }
        }
      },
      "delete" : {
        "summary" : "/cvs",
        "description" : "Deletes cv by the id.",
        "operationId" : "deleteCv",
        "parameters" : [ {
          "name" : "cvId",
          "in" : "path",
          "description" : "ID of cv to be deleted",
          "required" : true,
          "type" : "integer",
          "pattern" : "[\\d]+",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeCvDTO"
            }
          }
        }
      }
    },
    "/gobii/v1/cvs/{groupName}" : {
      "get" : {
        "summary" : "/cvs/{groupName:[a-zA-Z_]+}",
        "description" : "Gets cvs by the group name.",
        "operationId" : "getCvById",
        "parameters" : [ {
          "name" : "groupName",
          "in" : "path",
          "description" : "name of cv group to be extracted",
          "required" : true,
          "type" : "string",
          "pattern" : "[a-zA-Z_]+"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeCvDTO"
            }
          }
        }
      }
    },
    "/gobii/v1/datasets" : {
      "get" : {
        "summary" : "Gets all the datasets",
        "description" : "Retrieves all the existing datasets in the system. The list can be retrieved by page and specific page size.",
        "operationId" : "getDataSets",
        "parameters" : [ {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Specify the custom page size",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "pageNo",
          "in" : "query",
          "description" : "Retrieve the specified page by number",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "queryId",
          "in" : "query",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeDataSetDTO"
            }
          }
        }
      },
      "post" : {
        "summary" : "Creates a dataset",
        "description" : "Creates a new dataset in the system. $RequestResponseStructure$",
        "operationId" : "createDataSet",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PayloadEnvelopeDataSetDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeDataSetDTO"
            }
          }
        }
      }
    },
    "/gobii/v1/datasets/types" : {
      "get" : {
        "summary" : "Gets the defined Dataset Types in the system",
        "description" : "Retrieves all the defined dataset types in the system.",
        "operationId" : "getDataSetsTypes",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeNameIdDTO"
            }
          }
        }
      }
    },
    "/gobii/v1/datasets/types/{id}" : {
      "get" : {
        "summary" : "Gets all the datasets with the given dataset type ID",
        "description" : "Retrieves all the Datasets having the specified type ID.",
        "operationId" : "getDataSetsByTypeId",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the dataset type",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeDataSetDTO"
            }
          }
        }
      }
    },
    "/gobii/v1/datasets/{dataSetId}" : {
      "get" : {
        "summary" : "Gets the dataset given Dataset ID",
        "description" : "Retrieves the Dataset entity having the specified ID.",
        "operationId" : "getDataSetsById",
        "parameters" : [ {
          "name" : "dataSetId",
          "in" : "path",
          "description" : "ID of the Dataset to be extracted",
          "required" : true,
          "type" : "integer",
          "pattern" : "[\\d]+",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeDataSetDTO"
            }
          }
        }
      },
      "put" : {
        "summary" : "Updates the Dataset by Dataset ID",
        "description" : "Updates the Dataset entity having the specified datasetId. $RequestResponseStructure$",
        "operationId" : "replaceDataSet",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PayloadEnvelopeDataSetDTO"
          }
        }, {
          "name" : "datasetId",
          "in" : "path",
          "description" : "ID of the Dataset to be updated",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeDataSetDTO"
            }
          }
        }
      }
    },
    "/gobii/v1/datasets/{dataSetId}/analyses" : {
      "get" : {
        "summary" : "Gets all the analysis for the given Dataset ID",
        "description" : "Retrieves all the analysis for the given datasetId",
        "operationId" : "getAnalysesForDataset",
        "parameters" : [ {
          "name" : "dataSetId",
          "in" : "path",
          "description" : "ID of the dataset",
          "required" : true,
          "type" : "integer",
          "pattern" : "[\\d]+",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeAnalysisDTO"
            }
          }
        }
      }
    },
    "/gobii/v1/datasets/{datasetId}/jobs" : {
      "get" : {
        "summary" : "Gets the job details for the given Dataset ID",
        "description" : "Retrieves the information for active job for a given datasetId",
        "operationId" : "getJobDetailsByDatasetId",
        "parameters" : [ {
          "name" : "datasetId",
          "in" : "path",
          "description" : "ID of the dataset",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeJobDTO"
            }
          }
        }
      }
    },
    "/gobii/v1/displays" : {
      "get" : {
        "summary" : "Gets all the displays",
        "description" : "Retrieves a list of all the Display entities",
        "operationId" : "getDisplays",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeDisplayDTO"
            }
          }
        }
      },
      "post" : {
        "summary" : "Creates a display entity",
        "description" : "Creates a display entity with the given information. $RequestResponseStructure$",
        "operationId" : "createDisplay",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PayloadEnvelopeDisplayDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeDisplayDTO"
            }
          }
        }
      }
    },
    "/gobii/v1/displays/{displayId}" : {
      "get" : {
        "summary" : "Gets display by Display ID",
        "description" : "Retrieves the Display entity having the specified ID",
        "operationId" : "getDisplayById",
        "parameters" : [ {
          "name" : "displayId",
          "in" : "path",
          "description" : "ID of the Display to be extracted",
          "required" : true,
          "type" : "integer",
          "pattern" : "[\\d]+",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeDisplayDTO"
            }
          }
        }
      },
      "put" : {
        "summary" : "Updates display by Display ID",
        "description" : "Updates the Display entity having the specified displayId. $RequestResponseStructure$",
        "operationId" : "replaceDisplay",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PayloadEnvelopeDisplayDTO"
          }
        }, {
          "name" : "displayId",
          "in" : "path",
          "description" : "ID of the Display to be updated",
          "required" : true,
          "type" : "integer",
          "pattern" : "[\\d]+",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeDisplayDTO"
            }
          }
        }
      }
    },
    "/gobii/v1/entities" : {
      "get" : {
        "summary" : "Gets all the entities",
        "description" : "Retrieves all the existing entities in the system.",
        "operationId" : "getAllEntityStats",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeEntityStatsDTO"
            }
          }
        }
      }
    },
    "/gobii/v1/entities/{entityNameParent}/{parentId}/{entityNameChild}/count" : {
      "get" : {
        "summary" : "Gets the total count of the children for the given Entity",
        "description" : "Retrieves the total count of the children for the given entity",
        "operationId" : "getEntityCountOfChildren",
        "parameters" : [ {
          "name" : "entityNameParent",
          "in" : "path",
          "description" : "Name of the parent entity",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "parentId",
          "in" : "path",
          "description" : "ID of the parent entity",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "entityNameChild",
          "in" : "path",
          "description" : "Name of the child entity",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeEntityStatsDTO"
            }
          }
        }
      }
    },
    "/gobii/v1/entities/{entityName}/count" : {
      "get" : {
        "summary" : "Gets the total entity count for the given Entity Name",
        "description" : "Retrieves the total Entity count for the given entityName",
        "operationId" : "getEntityCount",
        "parameters" : [ {
          "name" : "entityName",
          "in" : "path",
          "description" : "Name of the Entity",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeEntityStatsDTO"
            }
          }
        }
      }
    },
    "/gobii/v1/entities/{entityName}/lastmodified" : {
      "get" : {
        "summary" : "Gets the last modified entity for the given Entity Name",
        "description" : "Retrieves last modified Entity for the given entityName",
        "operationId" : "getEntityLastModified",
        "parameters" : [ {
          "name" : "entityName",
          "in" : "path",
          "description" : "Name of the Entity",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeEntityStatsDTO"
            }
          }
        }
      }
    },
    "/gobii/v1/experiments" : {
      "get" : {
        "summary" : "Gets all the experiments",
        "description" : "Retrieves all the existing experiments in the system.",
        "operationId" : "getExperiments",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeExperimentDTO"
            }
          }
        }
      },
      "post" : {
        "summary" : "Creates an experiment",
        "description" : "Creates a new experiment in the system. $RequestResponseStructure$",
        "operationId" : "createExperiment",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PayloadEnvelopeExperimentDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeExperimentDTO"
            }
          }
        }
      }
    },
    "/gobii/v1/experiments/{experimentId}" : {
      "get" : {
        "summary" : "Gets the experiment given Experiment ID",
        "description" : "Retrieves the Experiment entity having the specified ID.",
        "operationId" : "getExperimentsById",
        "parameters" : [ {
          "name" : "experimentId",
          "in" : "path",
          "description" : "ID of the Experiment to be updated",
          "required" : true,
          "type" : "integer",
          "pattern" : "[\\d]+",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeExperimentDTO"
            }
          }
        }
      },
      "put" : {
        "summary" : "Updates the Experiment by Experiement ID",
        "description" : "Updates the Experiment entity having the specified experimentId. $RequestResponseStructure$",
        "operationId" : "replaceExperiment",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PayloadEnvelopeExperimentDTO"
          }
        }, {
          "name" : "experimentId",
          "in" : "path",
          "description" : "ID of the Experiment to be updated",
          "required" : true,
          "type" : "integer",
          "pattern" : "[\\d]+",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeExperimentDTO"
            }
          }
        }
      }
    },
    "/gobii/v1/experiments/{experimentId}/protocols" : {
      "get" : {
        "summary" : "Gets all the Protocols by Experiment ID",
        "description" : "Retrieves all the protocols having the specified experimentId in the system.",
        "operationId" : "getProtocolByExperimentId",
        "parameters" : [ {
          "name" : "experimentId",
          "in" : "path",
          "description" : "ID of the Experiment",
          "required" : true,
          "type" : "integer",
          "pattern" : "[\\d]+",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeProtocolDTO"
            }
          }
        }
      }
    },
    "/gobii/v1/files/loader/{directoryName}" : {
      "get" : {
        "summary" : "Gets file preview for the specified directory name",
        "description" : "Retrieves file preview for the specified directory name",
        "operationId" : "getFilePreviewBySearch",
        "parameters" : [ {
          "name" : "directoryName",
          "in" : "path",
          "description" : "Name of the directory",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "fileFormat",
          "in" : "query",
          "description" : "Format/Extension of the file",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeLoaderFilePreviewDTO"
            }
          }
        }
      },
      "put" : {
        "summary" : "Creates a Directory to be used for loading",
        "description" : "Creates a directory in the system that will be used for storing the data files for loading",
        "operationId" : "createLoaderFileDirectory",
        "parameters" : [ {
          "name" : "directoryName",
          "in" : "path",
          "description" : "Name of the directory/folder",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PayloadEnvelopeLoaderFilePreviewDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeLoaderFilePreviewDTO"
            }
          }
        }
      }
    },
    "/gobii/v1/files/{destinationType}" : {
      "post" : {
        "summary" : "Upload file",
        "description" : "Uploads an arbitrary file to the specified destination",
        "operationId" : "uploadFile",
        "parameters" : [ {
          "name" : "destinationType",
          "in" : "path",
          "description" : "Destination type where the file will be uploaded to",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "fileName",
          "in" : "query",
          "description" : "Name of the file to be uploaded",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "file",
          "in" : "query",
          "description" : "The file to be uploaded",
          "required" : true,
          "type" : "ref"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      },
      "delete" : {
        "summary" : "Delete file",
        "description" : "Deletes an arbitrary file from the specified destination",
        "operationId" : "deleteFile",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "destinationType",
          "in" : "path",
          "description" : "Destination type where the file will be delete from",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "fileName",
          "in" : "query",
          "description" : "Name of the file to be deleted",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/gobii/v1/files/{gobiiJobId}/{destinationType}" : {
      "get" : {
        "summary" : "Download file for specified Job",
        "description" : "Downloads the specified file for a specific job from the specified directory",
        "operationId" : "downloadJobFile",
        "parameters" : [ {
          "name" : "gobiiJobId",
          "in" : "path",
          "description" : "ID of the Job",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "destinationType",
          "in" : "path",
          "description" : "Destination type where the file will be downloaded from",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "fileName",
          "in" : "query",
          "description" : "Name of the file to be downloaded",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/InputStreamResource"
            }
          }
        }
      },
      "post" : {
        "summary" : "Upload file for Job",
        "description" : "Uploads the specified file for a specific job to the specified directory",
        "operationId" : "uploadJobFile",
        "parameters" : [ {
          "name" : "gobiiJobId",
          "in" : "path",
          "description" : "ID of the Job that the file will be associated to",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "destinationType",
          "in" : "path",
          "description" : "Destination type where the file will be uploaded to",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "fileName",
          "in" : "query",
          "description" : "Name of the file",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "file",
          "in" : "query",
          "description" : "The file to be uploaded",
          "required" : true,
          "type" : "ref"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/gobii/v1/instructions/extractor" : {
      "post" : {
        "summary" : "Creates instruction file for extracting data",
        "description" : "Creates extractor instruction file and then submits a new Job.",
        "operationId" : "createExtractorInstruction",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PayloadEnvelopeExtractorInstructionFilesDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeExtractorInstructionFilesDTO"
            }
          }
        }
      }
    },
    "/gobii/v1/instructions/extractor/jobs/{jobName}" : {
      "get" : {
        "summary" : "Gets the extract job status by Job name",
        "description" : "Retrieves the extract job status along with other job details having the specified Job Name.",
        "operationId" : "getExtractorInstructionStatus",
        "parameters" : [ {
          "name" : "jobName",
          "in" : "path",
          "description" : "Name of the job",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeJobDTO"
            }
          }
        }
      }
    },
    "/gobii/v1/instructions/extractor/{instructionFileName}" : {
      "get" : {
        "summary" : "Gets the extract instruction information given file name",
        "description" : "Retrieves the extractor instruction file entity having the specified instruction file name.",
        "operationId" : "getExtractorInstruction",
        "parameters" : [ {
          "name" : "instructionFileName",
          "in" : "path",
          "description" : "Name of the instruction file to be retrieved",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeExtractorInstructionFilesDTO"
            }
          }
        }
      }
    },
    "/gobii/v1/instructions/loader" : {
      "post" : {
        "summary" : "Creates instruction file for loading data",
        "description" : "Creates loader instruction file and then submits a new Job.",
        "operationId" : "createLoaderInstruction",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PayloadEnvelopeLoaderInstructionFilesDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeLoaderInstructionFilesDTO"
            }
          }
        }
      }
    },
    "/gobii/v1/instructions/loader/jobs/{jobName}" : {
      "get" : {
        "summary" : "Gets the loading job status by Job name",
        "description" : "Retrieves the loading job status along with other job details having the specified Job Name.",
        "operationId" : "getLoaderInstructionStatus",
        "parameters" : [ {
          "name" : "jobName",
          "in" : "path",
          "description" : "Name of the job",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeJobDTO"
            }
          }
        }
      }
    },
    "/gobii/v1/instructions/loader/{instructionFileName}" : {
      "get" : {
        "summary" : "Gets the loading instruction information given file name",
        "description" : "Retrieves the loader instruction file entity having the specified instruction file name.",
        "operationId" : "getLoaderInstruction",
        "parameters" : [ {
          "name" : "instructionFileName",
          "in" : "path",
          "description" : "Name of the instruction file to be retrieved.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeLoaderInstructionFilesDTO"
            }
          }
        }
      }
    },
    "/gobii/v1/jobs" : {
      "get" : {
        "summary" : "Gets all the jobs",
        "description" : "Retrieves all the existing jobs in the system.",
        "operationId" : "getStatus",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeJobDTO"
            }
          }
        }
      },
      "post" : {
        "summary" : "Creates a job",
        "description" : "Creates a new job in the system. $RequestResponseStructure$",
        "operationId" : "createJob",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PayloadEnvelopeJobDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeJobDTO"
            }
          }
        }
      }
    },
    "/gobii/v1/jobs/dnasamples/{jobName}" : {
      "post" : {
        "summary" : "Created DNA samples for a given Job",
        "description" : "Creates DNA samples for a given Job having the specified name in the system. $RequestResponseStructure$",
        "operationId" : "submitDnaSamplesByJobName",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PayloadEnvelopeDnaSampleDTO"
          }
        }, {
          "name" : "jobName",
          "in" : "path",
          "description" : "Name of the Job that the DNA samples will be added to",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeJobDTO"
            }
          }
        }
      }
    },
    "/gobii/v1/jobs/{jobName}" : {
      "get" : {
        "summary" : "Gets the job given Job Name",
        "description" : "Retrieves the Job entity having the specified name.",
        "operationId" : "getStatusById",
        "parameters" : [ {
          "name" : "jobName",
          "in" : "path",
          "description" : "Name of the Job to be extracted",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeJobDTO"
            }
          }
        }
      },
      "put" : {
        "summary" : "Updates the Job by Job Name",
        "description" : "Updates the Job entity having the specified jobName. $RequestResponseStructure$",
        "operationId" : "replaceStatus",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PayloadEnvelopeJobDTO"
          }
        }, {
          "name" : "jobName",
          "in" : "path",
          "description" : "Name of the Job to be updated",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeJobDTO"
            }
          }
        }
      }
    },
    "/gobii/v1/manifests" : {
      "get" : {
        "summary" : "Gets all the Manifests",
        "description" : "Retrieves an unfiltered list of all Manifest entities.",
        "operationId" : "getManifests",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeManifestDTO"
            }
          }
        }
      },
      "post" : {
        "summary" : "Creates manifest entity",
        "description" : "Creates a Manifest entity for GOBii system. $RequestResponseStructure$",
        "operationId" : "createManifest",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PayloadEnvelopeManifestDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeManifestDTO"
            }
          }
        }
      }
    },
    "/gobii/v1/manifests/{manifestId}" : {
      "get" : {
        "summary" : "Gets the manifest given Manifest ID",
        "description" : "Retrieves the Manifest entity having the specified ID.",
        "operationId" : "getManifestById",
        "parameters" : [ {
          "name" : "manifestId",
          "in" : "path",
          "description" : "ID of the Manifest to be retrieved",
          "required" : true,
          "type" : "integer",
          "pattern" : "[\\d]+",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeManifestDTO"
            }
          }
        }
      },
      "put" : {
        "summary" : "Updates manifest by Manifest ID",
        "description" : "Updates the Manifest entity having the specified manifestId. $RequestResponseStructure$",
        "operationId" : "replaceManifest",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PayloadEnvelopeManifestDTO"
          }
        }, {
          "name" : "manifestId",
          "in" : "path",
          "description" : "ID of the Manifest to be updated",
          "required" : true,
          "type" : "integer",
          "pattern" : "[\\d]+",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeManifestDTO"
            }
          }
        }
      }
    },
    "/gobii/v1/maps" : {
      "get" : {
        "summary" : "Gets all the Mapsets",
        "description" : "Retrieves all the existing Mapsets in the system.",
        "operationId" : "getMaps",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeMapsetDTO"
            }
          }
        }
      }
    },
    "/gobii/v1/mapsets" : {
      "get" : {
        "summary" : "Gets all the mapsets",
        "description" : "Retrieves all the existing mapsets in the system.",
        "operationId" : "getMapsets",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeMapsetDTO"
            }
          }
        }
      },
      "post" : {
        "summary" : "Creates a mapset",
        "description" : "Creates a new mapset in the system. $RequestResponseStructure$",
        "operationId" : "createMapset",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PayloadEnvelopeMapsetDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeMapsetDTO"
            }
          }
        }
      }
    },
    "/gobii/v1/mapsets/{mapsetId}" : {
      "get" : {
        "summary" : "Gets the mapset given Mapset ID",
        "description" : "Retrieves the Mapset entity having the specified ID.",
        "operationId" : "getMapsetById",
        "parameters" : [ {
          "name" : "mapsetId",
          "in" : "path",
          "description" : "ID of the Mapset to be extracted",
          "required" : true,
          "type" : "integer",
          "pattern" : "[\\d]+",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeMapsetDTO"
            }
          }
        }
      },
      "put" : {
        "summary" : "Updates the Mapset by Mapset ID",
        "description" : "Updates the Mapset entity having the specified mapsetId. $RequestResponseStructure$",
        "operationId" : "replaceMapset",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PayloadEnvelopeMapsetDTO"
          }
        }, {
          "name" : "mapsetId",
          "in" : "path",
          "description" : "ID of the Mapset to be updated",
          "required" : true,
          "type" : "integer",
          "pattern" : "[\\d]+",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeMapsetDTO"
            }
          }
        }
      }
    },
    "/gobii/v1/marker-search" : {
      "get" : {
        "summary" : "Marker search",
        "description" : "Gets Marker by searching by name",
        "operationId" : "getMarkerByName",
        "parameters" : [ {
          "name" : "name",
          "in" : "query",
          "description" : "Name of the marker",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeMarkerDTO"
            }
          }
        }
      }
    },
    "/gobii/v1/markergroups" : {
      "get" : {
        "summary" : "Gets all the marker groups",
        "description" : "Retrieves all the existing marker groups in the system.",
        "operationId" : "getMarkerGroups",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeMarkerGroupDTO"
            }
          }
        }
      },
      "post" : {
        "summary" : "Creates a Marker Group",
        "description" : "Creates a new marker group in the system. $RequestResponseStructure$",
        "operationId" : "createMarkerGroup",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PayloadEnvelopeMarkerGroupDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeMarkerGroupDTO"
            }
          }
        }
      }
    },
    "/gobii/v1/markergroups/{markerGroupId}" : {
      "get" : {
        "summary" : "Gets the marker group given Marker Group ID",
        "description" : "Retrieves the Marker Group entity having the specified ID.",
        "operationId" : "getMarkerGroupById",
        "parameters" : [ {
          "name" : "markerGroupId",
          "in" : "path",
          "description" : "ID of the marker group to be updated",
          "required" : true,
          "type" : "integer",
          "pattern" : "[\\d]+",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeMarkerGroupDTO"
            }
          }
        }
      },
      "put" : {
        "summary" : "Updates the Marker Group by Marker Group ID",
        "description" : "Updates the Marker Group entity having the specified markerGroupId. $RequestResponseStructure$",
        "operationId" : "replaceMarkerGroup",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PayloadEnvelopeMarkerGroupDTO"
          }
        }, {
          "name" : "markerGroupId",
          "in" : "path",
          "description" : "ID of the Marker Group to be updated",
          "required" : true,
          "type" : "integer",
          "pattern" : "[\\d]+",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeMarkerGroupDTO"
            }
          }
        }
      }
    },
    "/gobii/v1/markers" : {
      "get" : {
        "summary" : "Gets all the markers",
        "description" : "Retrieves all the existing markers in the system.",
        "operationId" : "getMarkers",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeMarkerDTO"
            }
          }
        }
      },
      "post" : {
        "summary" : "Creates a marker",
        "description" : "Creates a new marker in the system. $RequestResponseStructure$",
        "operationId" : "createMarker",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PayloadEnvelopeMarkerDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeMarkerDTO"
            }
          }
        }
      }
    },
    "/gobii/v1/markers/{markerId}" : {
      "get" : {
        "summary" : "Gets the marker given Marker ID",
        "description" : "Retrieves the Marker entity having the specified ID.",
        "operationId" : "getMarkerById",
        "parameters" : [ {
          "name" : "markerId",
          "in" : "path",
          "description" : "ID of the Marker to be extracted",
          "required" : true,
          "type" : "integer",
          "pattern" : "[\\d]+",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeMarkerDTO"
            }
          }
        }
      },
      "put" : {
        "summary" : "Updates the Marker by Marker ID",
        "description" : "Updates the Marker entity having the specified markerId. $RequestResponseStructure$",
        "operationId" : "replaceMarker",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PayloadEnvelopeMarkerDTO"
          }
        }, {
          "name" : "markerId",
          "in" : "path",
          "description" : "ID of the Marker to be updated",
          "required" : true,
          "type" : "integer",
          "pattern" : "[\\d]+",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeMarkerDTO"
            }
          }
        }
      }
    },
    "/gobii/v1/names/{entity}" : {
      "get" : {
        "summary" : "Gets a list of name/ID combination for given Entity",
        "description" : "Retrieves a list of name/ID combination for a given entity. For the list of entities supported see class GobiiEntityNameType.List can further be filtered out by specifying the filter type and value.For the list of filter types supported see class GobiiFilterType.Example use case: entity = CV; filterType = NAMES_BY_TYPE_NAME; filterValue = statusResult will be a list of CV terms having status as the cv group",
        "operationId" : "getNames",
        "parameters" : [ {
          "name" : "entity",
          "in" : "path",
          "description" : "The entity to be retrieved",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "filterType",
          "in" : "query",
          "description" : "The filter type for the name list",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "filterValue",
          "in" : "query",
          "description" : "The value for the filter type",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeNameIdDTO"
            }
          }
        }
      },
      "post" : {
        "summary" : "Gets a list of name/ID combination for given Entity and a name list",
        "description" : "Retrieves a list of name/ID combination for a given entity and name list. For the list of entities supported see class GobiiEntityNameType.This is service is specifically implemented for these filter types: NAMES_BY_NAME_LIST - given a list of names, return the same list with the corresponding ID in the database. If name doesn't exist, ID will be 0.NAMES_BY_NAME_LIST_RETURN_EXISTS - given a list of names, return the list of names with ID that exists in the database.NAMES_BY_NAME_LIST_RETURN_ABSENT - given a list of names, return the list of names that doesn't exist in the database with 0 as the IDFilter value varies per entity. This can be cv group name, project ID, platform ID, etc.Example use case: entity = CV; filterType = NAMES_BY_NAME_LIST; filterValue = germplasm_typeResult will be a list of CV terms with ID having germplasm_type as the cv group",
        "operationId" : "getNamesByNameList",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PayloadEnvelopeNameIdDTO"
          }
        }, {
          "name" : "entity",
          "in" : "path",
          "description" : "The entity to be retrieved",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "filterType",
          "in" : "query",
          "description" : "The filter type for the name list",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "filterValue",
          "in" : "query",
          "description" : "The value for the filter type",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeNameIdDTO"
            }
          }
        }
      }
    },
    "/gobii/v1/organizations" : {
      "get" : {
        "summary" : "Gets all the organizations",
        "description" : "Retrieves all the existing organizations in the system.",
        "operationId" : "getOrganizations",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeOrganizationDTO"
            }
          }
        }
      },
      "post" : {
        "summary" : "Creates a organization",
        "description" : "Creates a new organization in the system. $RequestResponseStructure$",
        "operationId" : "createOrganization",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PayloadEnvelopeOrganizationDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeOrganizationDTO"
            }
          }
        }
      }
    },
    "/gobii/v1/organizations/{organizationId}" : {
      "get" : {
        "summary" : "Gets the organization given Organization ID",
        "description" : "Retrieves the Organization entity having the specified ID.",
        "operationId" : "getOrganizationsById",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "ID of the Organization to be extracted",
          "required" : true,
          "type" : "integer",
          "pattern" : "[\\d]+",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeOrganizationDTO"
            }
          }
        }
      },
      "put" : {
        "summary" : "Updates the Organization by Organization ID",
        "description" : "Updates the Organization entity having the specified organizationId. $RequestResponseStructure$",
        "operationId" : "replaceOrganization",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PayloadEnvelopeOrganizationDTO"
          }
        }, {
          "name" : "organizationId",
          "in" : "path",
          "description" : "ID of the Organization to be updated",
          "required" : true,
          "type" : "integer",
          "pattern" : "[\\d]+",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeOrganizationDTO"
            }
          }
        }
      }
    },
    "/gobii/v1/platforms" : {
      "get" : {
        "summary" : "Gets all the platforms",
        "description" : "Retrieves all the existing platforms in the system.",
        "operationId" : "getPlatforms",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopePlatformDTO"
            }
          }
        }
      },
      "post" : {
        "summary" : "Creates a Platform",
        "description" : "Creates a new Platform in the system. $RequestResponseStructure$",
        "operationId" : "createPlatform",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PayloadEnvelopePlatformDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopePlatformDTO"
            }
          }
        }
      }
    },
    "/gobii/v1/platforms/protocols/{vendorProtocolId}" : {
      "get" : {
        "summary" : "Gets the platform details given Vendor Protocol ID",
        "description" : "Retrieves the Platform entity having the specified Vendor Protocol ID.",
        "operationId" : "getPlatformDetailsByVendorProtocolId",
        "parameters" : [ {
          "name" : "vendorProtocolId",
          "in" : "path",
          "description" : "ID of the vendor protocol",
          "required" : true,
          "type" : "integer",
          "pattern" : "[\\d]+",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopePlatformDTO"
            }
          }
        }
      }
    },
    "/gobii/v1/platforms/{platformId}" : {
      "get" : {
        "summary" : "Gets the platform given Platform ID",
        "description" : "Retrieves the Platform entity having the specified ID.",
        "operationId" : "getPlatformsById",
        "parameters" : [ {
          "name" : "platformId",
          "in" : "path",
          "description" : "ID of the Platform to be extracted",
          "required" : true,
          "type" : "integer",
          "pattern" : "[\\d]+",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopePlatformDTO"
            }
          }
        }
      },
      "put" : {
        "summary" : "Updates the Platform by Platform ID",
        "description" : "Updates the Platform entity having the specified platformId. $RequestResponseStructure$",
        "operationId" : "replacePlatform",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PayloadEnvelopePlatformDTO"
          }
        }, {
          "name" : "platformId",
          "in" : "path",
          "description" : "ID of the Platform to be updated",
          "required" : true,
          "type" : "integer",
          "pattern" : "[\\d]+",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopePlatformDTO"
            }
          }
        }
      }
    },
    "/gobii/v1/projects" : {
      "get" : {
        "summary" : "Gets all the projects",
        "description" : "Retrieves all the existing projects in the system.",
        "operationId" : "getProjects",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeProjectDTO"
            }
          }
        }
      },
      "post" : {
        "summary" : "Creates a project",
        "description" : "Creates a new project in the system. $RequestResponseStructure$",
        "operationId" : "createProject",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PayloadEnvelopeProjectDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeProjectDTO"
            }
          }
        }
      }
    },
    "/gobii/v1/projects/{projectId}" : {
      "get" : {
        "summary" : "Gets the projects given Project ID",
        "description" : "Retrieves the Project entity having the specified ID.",
        "operationId" : "getProjectsById",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "ID of the Project to be extracted",
          "required" : true,
          "type" : "integer",
          "pattern" : "[\\d]+",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeProjectDTO"
            }
          }
        }
      },
      "put" : {
        "summary" : "Updates the Project by Project ID",
        "description" : "Updates the Project entity having the specified projectId. $RequestResponseStructure$",
        "operationId" : "replaceProject",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PayloadEnvelopeProjectDTO"
          }
        }, {
          "name" : "projectId",
          "in" : "path",
          "description" : "ID of the Project to be updated",
          "required" : true,
          "type" : "integer",
          "pattern" : "[\\d]+",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeProjectDTO"
            }
          }
        }
      }
    },
    "/gobii/v1/protocols" : {
      "get" : {
        "summary" : "Gets all the protocols",
        "description" : "Retrieves all the existing protocols in the system.",
        "operationId" : "getProtocols",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeProtocolDTO"
            }
          }
        }
      },
      "post" : {
        "summary" : "Creates a Protocol",
        "description" : "Creates a new Protocol in the system. $RequestResponseStructure$",
        "operationId" : "createProtocol",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PayloadEnvelopeProtocolDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeProtocolDTO"
            }
          }
        }
      }
    },
    "/gobii/v1/protocols/{protocolId}" : {
      "get" : {
        "summary" : "Gets the protocol given Protocol ID",
        "description" : "Retrieves the Protocol entity having the specified ID.",
        "operationId" : "replaceProtocol",
        "parameters" : [ {
          "name" : "protocolId",
          "in" : "path",
          "description" : "ID of the Protocol to be extracted",
          "required" : true,
          "type" : "integer",
          "pattern" : "[\\d]+",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeProtocolDTO"
            }
          }
        }
      },
      "put" : {
        "summary" : "Updates the Protocol by Protocol ID",
        "description" : "Updates the Protocol entity having the specified protocolId. $RequestResponseStructure$",
        "operationId" : "replaceProtocol",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PayloadEnvelopeProtocolDTO"
          }
        }, {
          "name" : "protocolId",
          "in" : "path",
          "description" : "ID of the Protocol to be updated",
          "required" : true,
          "type" : "integer",
          "pattern" : "[\\d]+",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeProtocolDTO"
            }
          }
        }
      }
    },
    "/gobii/v1/protocols/{protocolId}/vendors" : {
      "get" : {
        "summary" : "Gets all the Vendor Protocols given Protocol ID",
        "description" : "Retrieves all the vendor protocols given protocolId in the system.",
        "operationId" : "getVendorsForProtocol",
        "parameters" : [ {
          "name" : "protocolId",
          "in" : "path",
          "description" : "ID of the Protocol ID",
          "required" : true,
          "type" : "integer",
          "pattern" : "[\\d]+",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeOrganizationDTO"
            }
          }
        }
      },
      "post" : {
        "summary" : "Creates a Vendor Protocol record for given Protocol ID",
        "description" : "Creates a new Vendor Protocol in the system for specified Protocol ID. $RequestResponseStructure$",
        "operationId" : "addVendorToProtocol",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PayloadEnvelopeOrganizationDTO"
          }
        }, {
          "name" : "protocolId",
          "in" : "path",
          "description" : "ID of the Protocol",
          "required" : true,
          "type" : "integer",
          "pattern" : "[\\d]+",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeOrganizationDTO"
            }
          }
        }
      },
      "put" : {
        "summary" : "Updates the Vendor Protocol by Protocol ID",
        "description" : "Updates the Vendor Protocol entity having the specified protocolId. $RequestResponseStructure$",
        "operationId" : "updateOrReplaceVendorProtocol",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PayloadEnvelopeOrganizationDTO"
          }
        }, {
          "name" : "protocolId",
          "in" : "path",
          "description" : "ID of the Protocol",
          "required" : true,
          "type" : "integer",
          "pattern" : "[\\d]+",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeOrganizationDTO"
            }
          }
        }
      }
    },
    "/gobii/v1/references" : {
      "get" : {
        "summary" : "Gets all the references",
        "description" : "Retrieves all the existing references in the system.",
        "operationId" : "getReferences",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeReferenceDTO"
            }
          }
        }
      },
      "post" : {
        "summary" : "Creates a reference",
        "description" : "Creates a new reference in the system. $RequestResponseStructure$",
        "operationId" : "createReference",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PayloadEnvelopeReferenceDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeReferenceDTO"
            }
          }
        }
      }
    },
    "/gobii/v1/references/{referenceId}" : {
      "get" : {
        "summary" : "Gets the reference given Reference ID",
        "description" : "Retrieves the Reference entity having the specified ID.",
        "operationId" : "getReferenceById",
        "parameters" : [ {
          "name" : "referenceId",
          "in" : "path",
          "description" : "ID of the Reference to be extracted",
          "required" : true,
          "type" : "integer",
          "pattern" : "[\\d]+",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeReferenceDTO"
            }
          }
        }
      },
      "put" : {
        "summary" : "Updates the Reference by Reference ID",
        "description" : "Updates the Reference entity having the specified referenceId. $RequestResponseStructure$",
        "operationId" : "replaceReference",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PayloadEnvelopeReferenceDTO"
          }
        }, {
          "name" : "referenceId",
          "in" : "path",
          "description" : "ID of the Reference to be updated",
          "required" : true,
          "type" : "integer",
          "pattern" : "[\\d]+",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeReferenceDTO"
            }
          }
        }
      }
    },
    "/gobii/v1/restprofiles" : {
      "put" : {
        "summary" : "Gets REST profiles of GOBii system",
        "description" : "When the Header of the payload envelope for a resource contains maxGet, maxPost, and maxPut values, this resource provides a means to update the max for a given rest resource ID and for a given HTTP verb. The values are transient in the sense that they will be confined only to a specific web service deployment. They are stored in the web service configurationdocument",
        "operationId" : "updateRestProfile",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PayloadEnvelopeRestProfileDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PayloadEnvelopeRestProfileDTO"
            }
          }
        }
      }
    }
  },
  "securityDefinitions" : {
    "basicAuth" : {
      "type" : "basic"
    }
  },
  "definitions" : {
    "AnalysisDTO" : {
      "type" : "object",
      "properties" : {
        "allowedProcessTypes" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string",
            "enum" : [ "CREATE", "READ", "UPDATE", "DELETE", "NONE" ]
          }
        },
        "entityNameType" : {
          "type" : "string",
          "enum" : [ "UNKNOWN", "ANALYSIS", "CONTACT", "DATASET", "CV", "CVGROUP", "PROJECT", "ORGANIZATION", "PLATFORM", "MANIFEST", "MAPSET", "MARKER_GROUP", "EXPERIMENT", "REFERENCE", "ROLE", "DISPLAY", "MARKER", "PROTOCOL", "VENDOR_PROTOCOL", "DNASAMPLE", "LINKAGE_GROUP", "DNARUN", "GERMPLASM", "JOB" ]
        },
        "createdBy" : {
          "type" : "integer",
          "format" : "int32"
        },
        "createdDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "modifiedBy" : {
          "type" : "integer",
          "format" : "int32"
        },
        "modifiedDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "analysisId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "analysisName" : {
          "type" : "string"
        },
        "analysisDescription" : {
          "type" : "string"
        },
        "anlaysisTypeId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "program" : {
          "type" : "string"
        },
        "programVersion" : {
          "type" : "string"
        },
        "algorithm" : {
          "type" : "string"
        },
        "sourceName" : {
          "type" : "string"
        },
        "sourceVersion" : {
          "type" : "string"
        },
        "sourceUri" : {
          "type" : "string"
        },
        "referenceId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "timeExecuted" : {
          "type" : "string",
          "format" : "date-time"
        },
        "statusId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "parameters" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/EntityPropertyDTO"
          }
        },
        "id" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "ConfigSettingsDTO" : {
      "type" : "object",
      "properties" : {
        "allowedProcessTypes" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string",
            "enum" : [ "CREATE", "READ", "UPDATE", "DELETE", "NONE" ]
          }
        },
        "serverConfigs" : {
          "type" : "object",
          "additionalProperties" : {
            "$ref" : "#/definitions/ServerConfigItem"
          }
        },
        "serverCapabilities" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "boolean"
          }
        },
        "maxUploadSizeMbytes" : {
          "type" : "integer",
          "format" : "int32"
        },
        "id" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "ContactDTO" : {
      "type" : "object",
      "properties" : {
        "allowedProcessTypes" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string",
            "enum" : [ "CREATE", "READ", "UPDATE", "DELETE", "NONE" ]
          }
        },
        "entityNameType" : {
          "type" : "string",
          "enum" : [ "UNKNOWN", "ANALYSIS", "CONTACT", "DATASET", "CV", "CVGROUP", "PROJECT", "ORGANIZATION", "PLATFORM", "MANIFEST", "MAPSET", "MARKER_GROUP", "EXPERIMENT", "REFERENCE", "ROLE", "DISPLAY", "MARKER", "PROTOCOL", "VENDOR_PROTOCOL", "DNASAMPLE", "LINKAGE_GROUP", "DNARUN", "GERMPLASM", "JOB" ]
        },
        "createdBy" : {
          "type" : "integer",
          "format" : "int32"
        },
        "createdDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "modifiedBy" : {
          "type" : "integer",
          "format" : "int32"
        },
        "modifiedDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "contactId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "lastName" : {
          "type" : "string"
        },
        "firstName" : {
          "type" : "string"
        },
        "code" : {
          "type" : "string"
        },
        "email" : {
          "type" : "string"
        },
        "roles" : {
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "organizationId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "userName" : {
          "type" : "string"
        },
        "id" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "CvDTO" : {
      "type" : "object",
      "properties" : {
        "allowedProcessTypes" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string",
            "enum" : [ "CREATE", "READ", "UPDATE", "DELETE", "NONE" ]
          }
        },
        "groupId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "xrefId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "entityStatus" : {
          "type" : "integer",
          "format" : "int32"
        },
        "term" : {
          "type" : "string"
        },
        "abbreviation" : {
          "type" : "string"
        },
        "definition" : {
          "type" : "string"
        },
        "rank" : {
          "type" : "integer",
          "format" : "int32"
        },
        "groupType" : {
          "type" : "integer",
          "format" : "int32"
        },
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "group" : {
          "type" : "integer",
          "format" : "int32"
        },
        "cvId" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "CvGroupDTO" : {
      "type" : "object",
      "properties" : {
        "allowedProcessTypes" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string",
            "enum" : [ "CREATE", "READ", "UPDATE", "DELETE", "NONE" ]
          }
        },
        "cvGroupId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "name" : {
          "type" : "string"
        },
        "definition" : {
          "type" : "string"
        },
        "groupType" : {
          "type" : "integer",
          "format" : "int32"
        },
        "id" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "DataSetDTO" : {
      "type" : "object",
      "properties" : {
        "allowedProcessTypes" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string",
            "enum" : [ "CREATE", "READ", "UPDATE", "DELETE", "NONE" ]
          }
        },
        "createdBy" : {
          "type" : "integer",
          "format" : "int32"
        },
        "createdDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "modifiedBy" : {
          "type" : "integer",
          "format" : "int32"
        },
        "modifiedDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "dataSetId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "datasetName" : {
          "type" : "string"
        },
        "experimentId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "experimentName" : {
          "type" : "string"
        },
        "projectId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "projectName" : {
          "type" : "string"
        },
        "protocolId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "protocolName" : {
          "type" : "string"
        },
        "platformId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "platformName" : {
          "type" : "string"
        },
        "callingAnalysisId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "callingAnalysisName" : {
          "type" : "string"
        },
        "piContactId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "piEmail" : {
          "type" : "string"
        },
        "piFirstName" : {
          "type" : "string"
        },
        "piLastName" : {
          "type" : "string"
        },
        "dataTable" : {
          "type" : "string"
        },
        "dataFile" : {
          "type" : "string"
        },
        "qualityTable" : {
          "type" : "string"
        },
        "qualityFile" : {
          "type" : "string"
        },
        "statusId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "datatypeId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "datatypeName" : {
          "type" : "string"
        },
        "jobId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "jobStatusId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "jobStatusName" : {
          "type" : "string"
        },
        "jobTypeId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "jobTypeName" : {
          "type" : "string"
        },
        "jobSubmittedDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalSamples" : {
          "type" : "integer",
          "format" : "int32"
        },
        "totalMarkers" : {
          "type" : "integer",
          "format" : "int32"
        },
        "loaderLastName" : {
          "type" : "string"
        },
        "loaderFirstName" : {
          "type" : "string"
        },
        "analysesIds" : {
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "scores" : {
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "id" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "DisplayDTO" : {
      "type" : "object",
      "properties" : {
        "allowedProcessTypes" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string",
            "enum" : [ "CREATE", "READ", "UPDATE", "DELETE", "NONE" ]
          }
        },
        "entityNameType" : {
          "type" : "string",
          "enum" : [ "UNKNOWN", "ANALYSIS", "CONTACT", "DATASET", "CV", "CVGROUP", "PROJECT", "ORGANIZATION", "PLATFORM", "MANIFEST", "MAPSET", "MARKER_GROUP", "EXPERIMENT", "REFERENCE", "ROLE", "DISPLAY", "MARKER", "PROTOCOL", "VENDOR_PROTOCOL", "DNASAMPLE", "LINKAGE_GROUP", "DNARUN", "GERMPLASM", "JOB" ]
        },
        "createdBy" : {
          "type" : "integer",
          "format" : "int32"
        },
        "createdDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "modifiedBy" : {
          "type" : "integer",
          "format" : "int32"
        },
        "modifiedDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "includeDetailsList" : {
          "type" : "boolean",
          "default" : false
        },
        "displayId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "tableName" : {
          "type" : "string"
        },
        "columnName" : {
          "type" : "string"
        },
        "displayName" : {
          "type" : "string"
        },
        "displayRank" : {
          "type" : "integer",
          "format" : "int32"
        },
        "tableNamesWithColDisplay" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/TableColDisplay"
            }
          }
        },
        "id" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "DnaSampleDTO" : {
      "type" : "object",
      "properties" : {
        "allowedProcessTypes" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string",
            "enum" : [ "CREATE", "READ", "UPDATE", "DELETE", "NONE" ]
          }
        },
        "dnaRunId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "dnaSampleId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "externalCode" : {
          "type" : "string"
        },
        "germplasmId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "germplasmName" : {
          "type" : "string"
        },
        "analysisMethodName" : {
          "type" : "string"
        },
        "markerCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "dnaSampleName" : {
          "type" : "string"
        },
        "germplasmExternalCode" : {
          "type" : "string"
        },
        "projectId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "dnaSampleNum" : {
          "type" : "integer",
          "format" : "int32"
        },
        "dnarunName" : {
          "type" : "string"
        },
        "experimentId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "id" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "EntityPropertyDTO" : {
      "type" : "object",
      "properties" : {
        "entityIdId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "propertyId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "propertyName" : {
          "type" : "string"
        },
        "propertyValue" : {
          "type" : "string"
        }
      }
    },
    "EntityStatsDTO" : {
      "type" : "object",
      "properties" : {
        "allowedProcessTypes" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string",
            "enum" : [ "CREATE", "READ", "UPDATE", "DELETE", "NONE" ]
          }
        },
        "count" : {
          "type" : "integer",
          "format" : "int32"
        },
        "lastModified" : {
          "type" : "string",
          "format" : "date-time"
        },
        "entityNameType" : {
          "type" : "string",
          "enum" : [ "UNKNOWN", "ANALYSIS", "CONTACT", "DATASET", "CV", "CVGROUP", "PROJECT", "ORGANIZATION", "PLATFORM", "MANIFEST", "MAPSET", "MARKER_GROUP", "EXPERIMENT", "REFERENCE", "ROLE", "DISPLAY", "MARKER", "PROTOCOL", "VENDOR_PROTOCOL", "DNASAMPLE", "LINKAGE_GROUP", "DNARUN", "GERMPLASM", "JOB" ]
        },
        "entityStateDateType" : {
          "type" : "string",
          "enum" : [ "INSERT_UPDATE", "INSERT_ONLY" ]
        },
        "id" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "ExperimentDTO" : {
      "type" : "object",
      "properties" : {
        "allowedProcessTypes" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string",
            "enum" : [ "CREATE", "READ", "UPDATE", "DELETE", "NONE" ]
          }
        },
        "entityNameType" : {
          "type" : "string",
          "enum" : [ "UNKNOWN", "ANALYSIS", "CONTACT", "DATASET", "CV", "CVGROUP", "PROJECT", "ORGANIZATION", "PLATFORM", "MANIFEST", "MAPSET", "MARKER_GROUP", "EXPERIMENT", "REFERENCE", "ROLE", "DISPLAY", "MARKER", "PROTOCOL", "VENDOR_PROTOCOL", "DNASAMPLE", "LINKAGE_GROUP", "DNARUN", "GERMPLASM", "JOB" ]
        },
        "createdBy" : {
          "type" : "integer",
          "format" : "int32"
        },
        "createdDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "modifiedBy" : {
          "type" : "integer",
          "format" : "int32"
        },
        "modifiedDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "experimentId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "experimentName" : {
          "type" : "string"
        },
        "experimentCode" : {
          "type" : "string"
        },
        "experimentDataFile" : {
          "type" : "string"
        },
        "projectId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "vendorProtocolId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "manifestId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "statusId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "datasets" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/DataSetDTO"
          }
        },
        "id" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "ExtractorInstructionFilesDTO" : {
      "type" : "object",
      "properties" : {
        "allowedProcessTypes" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string",
            "enum" : [ "CREATE", "READ", "UPDATE", "DELETE", "NONE" ]
          }
        },
        "jobId" : {
          "type" : "string"
        },
        "gobiiExtractorInstructions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/GobiiExtractorInstruction"
          }
        },
        "instructionFileName" : {
          "type" : "string"
        },
        "id" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "File" : {
      "type" : "object",
      "properties" : {
        "path" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "parent" : {
          "type" : "string"
        },
        "absolute" : {
          "type" : "boolean",
          "default" : false
        },
        "canonicalPath" : {
          "type" : "string"
        },
        "parentFile" : {
          "$ref" : "#/definitions/File"
        },
        "absolutePath" : {
          "type" : "string"
        },
        "absoluteFile" : {
          "$ref" : "#/definitions/File"
        },
        "canonicalFile" : {
          "$ref" : "#/definitions/File"
        },
        "directory" : {
          "type" : "boolean",
          "default" : false
        },
        "file" : {
          "type" : "boolean",
          "default" : false
        },
        "hidden" : {
          "type" : "boolean",
          "default" : false
        },
        "totalSpace" : {
          "type" : "integer",
          "format" : "int64"
        },
        "freeSpace" : {
          "type" : "integer",
          "format" : "int64"
        },
        "usableSpace" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "GobiiDataSetExtract" : {
      "type" : "object",
      "properties" : {
        "gobiiFileType" : {
          "type" : "string",
          "enum" : [ "HAPMAP", "FLAPJACK", "GENERIC", "VCF", "META_DATA" ]
        },
        "accolate" : {
          "type" : "boolean",
          "default" : false
        },
        "gobiiJobStatus" : {
          "type" : "string",
          "enum" : [ "CV_PROGRESSSTATUS_PENDING", "CV_PROGRESSSTATUS_INPROGRESS", "CV_PROGRESSSTATUS_COMPLETED", "CV_PROGRESSSTATUS_FAILED", "CV_PROGRESSSTATUS_VALIDATION", "CV_PROGRESSSTATUS_DIGEST", "CV_PROGRESSSTATUS_TRANSFORMATION", "CV_PROGRESSSTATUS_METADATALOAD", "CV_PROGRESSSTATUS_MATRIXLOAD", "CV_PROGRESSSTATUS_ABORTED", "CV_PROGRESSSTATUS_METADATAEXTRACT", "CV_PROGRESSSTATUS_FINALASSEMBLY", "CV_PROGRESSSTATUS_QCPROCESSING", "CV_PROGRESSSTATUS_NOSTATUS" ]
        },
        "extractDestinationDirectory" : {
          "type" : "string"
        },
        "gobiiExtractFilterType" : {
          "type" : "string",
          "enum" : [ "UNKNOWN", "WHOLE_DATASET", "BY_MARKER", "BY_SAMPLE" ]
        },
        "markerList" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "sampleList" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "listFileName" : {
          "type" : "string"
        },
        "gobiiDatasetType" : {
          "$ref" : "#/definitions/PropNameId"
        },
        "principleInvestigator" : {
          "$ref" : "#/definitions/PropNameId"
        },
        "project" : {
          "$ref" : "#/definitions/PropNameId"
        },
        "dataSet" : {
          "$ref" : "#/definitions/PropNameId"
        },
        "platforms" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PropNameId"
          }
        },
        "gobiiSampleListType" : {
          "type" : "string",
          "enum" : [ "GERMPLASM_NAME", "EXTERNAL_CODE", "DNA_SAMPLE" ]
        },
        "markerGroups" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PropNameId"
          }
        },
        "extractedFiles" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/File"
          }
        },
        "logMessage" : {
          "type" : "string"
        }
      }
    },
    "GobiiExtractorInstruction" : {
      "type" : "object",
      "properties" : {
        "dataSetExtracts" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/GobiiDataSetExtract"
          }
        },
        "mapsetIds" : {
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "contactId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "contactEmail" : {
          "type" : "string"
        },
        "gobiiCropType" : {
          "type" : "string"
        },
        "qcCheck" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "GobiiFile" : {
      "type" : "object",
      "properties" : {
        "source" : {
          "type" : "string"
        },
        "destination" : {
          "type" : "string"
        },
        "delimiter" : {
          "type" : "string"
        },
        "gobiiFileType" : {
          "type" : "string",
          "enum" : [ "HAPMAP", "FLAPJACK", "GENERIC", "VCF", "META_DATA" ]
        },
        "requireDirectoriesToExist" : {
          "type" : "boolean",
          "default" : false
        },
        "createSource" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "GobiiFileColumn" : {
      "type" : "object",
      "properties" : {
        "gobiiColumnType" : {
          "type" : "string",
          "enum" : [ "CSV_COLUMN", "CSV_ROW", "CSV_BOTH", "VCF_SAMPLE", "VCF_MARKER", "VCF_VARIANT", "VCF_METADATA", "VCF_INFO", "CONSTANT", "AUTOINCREMENT", "VCF_MARKER_POS" ]
        },
        "getrCoord" : {
          "type" : "integer",
          "format" : "int32"
        },
        "getcCoord" : {
          "type" : "integer",
          "format" : "int32"
        },
        "name" : {
          "type" : "string"
        },
        "filterFrom" : {
          "type" : "string"
        },
        "filterTo" : {
          "type" : "string"
        },
        "findText" : {
          "type" : "string"
        },
        "replaceText" : {
          "type" : "string"
        },
        "constantValue" : {
          "type" : "string"
        },
        "index" : {
          "type" : "string"
        },
        "subcolumn" : {
          "type" : "boolean",
          "default" : false
        },
        "subcolumnDelimiter" : {
          "type" : "string"
        },
        "dataSetType" : {
          "type" : "string",
          "enum" : [ "NUCLEOTIDE_2_LETTER", "IUPAC", "SSR_ALLELE_SIZE", "DOMINANT_NON_NUCLEOTIDE", "CO_DOMINANT_NON_NUCLEOTIDE", "VCF" ]
        },
        "dataSetOrientationType" : {
          "type" : "string",
          "enum" : [ "SAMPLE_FAST", "MARKER_FAST" ]
        },
        "metaDataId" : {
          "type" : "string"
        }
      }
    },
    "GobiiLoaderInstruction" : {
      "type" : "object",
      "properties" : {
        "columnsByTableName" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/GobiiFileColumn"
            }
          }
        },
        "jobPayloadType" : {
          "type" : "string",
          "enum" : [ "CV_PAYLOADTYPE_SAMPLES", "CV_PAYLOADTYPE_MARKERS", "CV_PAYLOADTYPE_MATRIX", "CV_PAYLOADTYPE_MARKERSAMPLES", "CV_PAYLOADTYPE_ALLMETA" ]
        },
        "gobiiFile" : {
          "$ref" : "#/definitions/GobiiFile"
        },
        "table" : {
          "type" : "string"
        },
        "gobiiFileColumns" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/GobiiFileColumn"
          }
        },
        "vcfParameters" : {
          "$ref" : "#/definitions/VcfParameters"
        },
        "dataSetId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "gobiiCropType" : {
          "type" : "string"
        },
        "contactId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "contactEmail" : {
          "type" : "string"
        },
        "gobiiJobStatus" : {
          "type" : "string",
          "enum" : [ "CV_PROGRESSSTATUS_PENDING", "CV_PROGRESSSTATUS_INPROGRESS", "CV_PROGRESSSTATUS_COMPLETED", "CV_PROGRESSSTATUS_FAILED", "CV_PROGRESSSTATUS_VALIDATION", "CV_PROGRESSSTATUS_DIGEST", "CV_PROGRESSSTATUS_TRANSFORMATION", "CV_PROGRESSSTATUS_METADATALOAD", "CV_PROGRESSSTATUS_MATRIXLOAD", "CV_PROGRESSSTATUS_ABORTED", "CV_PROGRESSSTATUS_METADATAEXTRACT", "CV_PROGRESSSTATUS_FINALASSEMBLY", "CV_PROGRESSSTATUS_QCPROCESSING", "CV_PROGRESSSTATUS_NOSTATUS" ]
        },
        "logMessage" : {
          "type" : "string"
        },
        "qcCheck" : {
          "type" : "boolean",
          "default" : false
        },
        "project" : {
          "$ref" : "#/definitions/PropNameId"
        },
        "platform" : {
          "$ref" : "#/definitions/PropNameId"
        },
        "dataSet" : {
          "$ref" : "#/definitions/PropNameId"
        },
        "datasetType" : {
          "$ref" : "#/definitions/PropNameId"
        },
        "mapset" : {
          "$ref" : "#/definitions/PropNameId"
        },
        "experiment" : {
          "$ref" : "#/definitions/PropNameId"
        }
      }
    },
    "Header" : {
      "type" : "object",
      "properties" : {
        "gobiiProcessType" : {
          "type" : "string",
          "enum" : [ "CREATE", "READ", "UPDATE", "DELETE", "NONE" ]
        },
        "dtoHeaderAuth" : {
          "$ref" : "#/definitions/HeaderAuth"
        },
        "status" : {
          "$ref" : "#/definitions/Status"
        },
        "pagination" : {
          "$ref" : "#/definitions/Pagination"
        },
        "maxGet" : {
          "type" : "integer",
          "format" : "int32"
        },
        "maxPost" : {
          "type" : "integer",
          "format" : "int32"
        },
        "maxPut" : {
          "type" : "integer",
          "format" : "int32"
        },
        "gobiiVersion" : {
          "type" : "string"
        },
        "cropType" : {
          "type" : "string"
        }
      }
    },
    "HeaderAuth" : {
      "type" : "object",
      "properties" : {
        "userName" : {
          "type" : "string"
        },
        "password" : {
          "type" : "string"
        },
        "token" : {
          "type" : "string"
        },
        "gobiiCropType" : {
          "type" : "string"
        }
      }
    },
    "HeaderStatusMessage" : {
      "type" : "object",
      "properties" : {
        "gobiiStatusLevel" : {
          "type" : "string",
          "enum" : [ "ERROR", "VALIDATION", "WARNING", "INFO", "OK" ]
        },
        "gobiiValidationStatusType" : {
          "type" : "string",
          "enum" : [ "NONE", "UNKNOWN", "VALIDATION_COMPOUND_UNIQUE", "VALIDATION_NOT_UNIQUE", "NONEXISTENT_FK_ENTITY", "BAD_REQUEST", "MISSING_REQUIRED_VALUE", "ENTITY_DOES_NOT_EXIST", "ENTITY_ALREADY_EXISTS", "UNKNOWN_ENUM_VALUE", "RESOURCE_LIMIT" ]
        },
        "message" : {
          "type" : "string"
        }
      }
    },
    "InputStream" : {
      "type" : "object"
    },
    "InputStreamResource" : {
      "type" : "object",
      "properties" : {
        "inputStream" : {
          "$ref" : "#/definitions/InputStream"
        },
        "description" : {
          "type" : "string"
        },
        "open" : {
          "type" : "boolean",
          "default" : false
        },
        "readable" : {
          "type" : "boolean",
          "default" : false
        },
        "uri" : {
          "type" : "string",
          "format" : "uri"
        },
        "filename" : {
          "type" : "string"
        },
        "url" : {
          "type" : "string",
          "format" : "url"
        },
        "file" : {
          "$ref" : "#/definitions/File"
        }
      }
    },
    "JobDTO" : {
      "type" : "object",
      "properties" : {
        "allowedProcessTypes" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string",
            "enum" : [ "CREATE", "READ", "UPDATE", "DELETE", "NONE" ]
          }
        },
        "jobId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "jobName" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "payloadType" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        },
        "message" : {
          "type" : "string"
        },
        "submittedBy" : {
          "type" : "integer",
          "format" : "int32"
        },
        "submittedDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "datasetIds" : {
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "id" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "Link" : {
      "type" : "object",
      "properties" : {
        "href" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "methods" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string",
            "enum" : [ "GET", "POST", "PUT", "PATCH", "DELETE", "OPTIONS" ]
          }
        }
      }
    },
    "LinkCollection" : {
      "type" : "object",
      "properties" : {
        "linksPerDataItem" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Link"
          }
        },
        "exploreLinksPerDataItem" : {
          "type" : "array",
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/Link"
            }
          }
        }
      }
    },
    "LoaderFilePreviewDTO" : {
      "type" : "object",
      "properties" : {
        "allowedProcessTypes" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string",
            "enum" : [ "CREATE", "READ", "UPDATE", "DELETE", "NONE" ]
          }
        },
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "directoryName" : {
          "type" : "string"
        },
        "previewFileName" : {
          "type" : "string"
        },
        "fileList" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "filePreview" : {
          "type" : "array",
          "items" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "LoaderInstructionFilesDTO" : {
      "type" : "object",
      "properties" : {
        "allowedProcessTypes" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string",
            "enum" : [ "CREATE", "READ", "UPDATE", "DELETE", "NONE" ]
          }
        },
        "gobiiLoaderInstructions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/GobiiLoaderInstruction"
          }
        },
        "instructionFileName" : {
          "type" : "string"
        },
        "id" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "ManifestDTO" : {
      "type" : "object",
      "properties" : {
        "allowedProcessTypes" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string",
            "enum" : [ "CREATE", "READ", "UPDATE", "DELETE", "NONE" ]
          }
        },
        "entityNameType" : {
          "type" : "string",
          "enum" : [ "UNKNOWN", "ANALYSIS", "CONTACT", "DATASET", "CV", "CVGROUP", "PROJECT", "ORGANIZATION", "PLATFORM", "MANIFEST", "MAPSET", "MARKER_GROUP", "EXPERIMENT", "REFERENCE", "ROLE", "DISPLAY", "MARKER", "PROTOCOL", "VENDOR_PROTOCOL", "DNASAMPLE", "LINKAGE_GROUP", "DNARUN", "GERMPLASM", "JOB" ]
        },
        "createdBy" : {
          "type" : "integer",
          "format" : "int32"
        },
        "createdDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "modifiedBy" : {
          "type" : "integer",
          "format" : "int32"
        },
        "modifiedDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "manifestId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "name" : {
          "type" : "string"
        },
        "code" : {
          "type" : "string"
        },
        "filePath" : {
          "type" : "string"
        },
        "id" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "MapsetDTO" : {
      "type" : "object",
      "properties" : {
        "allowedProcessTypes" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string",
            "enum" : [ "CREATE", "READ", "UPDATE", "DELETE", "NONE" ]
          }
        },
        "entityNameType" : {
          "type" : "string",
          "enum" : [ "UNKNOWN", "ANALYSIS", "CONTACT", "DATASET", "CV", "CVGROUP", "PROJECT", "ORGANIZATION", "PLATFORM", "MANIFEST", "MAPSET", "MARKER_GROUP", "EXPERIMENT", "REFERENCE", "ROLE", "DISPLAY", "MARKER", "PROTOCOL", "VENDOR_PROTOCOL", "DNASAMPLE", "LINKAGE_GROUP", "DNARUN", "GERMPLASM", "JOB" ]
        },
        "createdBy" : {
          "type" : "integer",
          "format" : "int32"
        },
        "createdDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "modifiedBy" : {
          "type" : "integer",
          "format" : "int32"
        },
        "modifiedDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "mapsetId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "name" : {
          "type" : "string"
        },
        "code" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "referenceId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "mapType" : {
          "type" : "integer",
          "format" : "int32"
        },
        "statusId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "properties" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/EntityPropertyDTO"
          }
        },
        "id" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "MarkerDTO" : {
      "type" : "object",
      "properties" : {
        "allowedProcessTypes" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string",
            "enum" : [ "CREATE", "READ", "UPDATE", "DELETE", "NONE" ]
          }
        },
        "markerId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "platformId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "variantId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "markerName" : {
          "type" : "string"
        },
        "platformName" : {
          "type" : "string"
        },
        "code" : {
          "type" : "string"
        },
        "ref" : {
          "type" : "string"
        },
        "alts" : {
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "sequence" : {
          "type" : "string"
        },
        "referenceId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "strandId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "status" : {
          "type" : "integer",
          "format" : "int32"
        },
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "strand" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "MarkerGroupDTO" : {
      "type" : "object",
      "properties" : {
        "allowedProcessTypes" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string",
            "enum" : [ "CREATE", "READ", "UPDATE", "DELETE", "NONE" ]
          }
        },
        "entityNameType" : {
          "type" : "string",
          "enum" : [ "UNKNOWN", "ANALYSIS", "CONTACT", "DATASET", "CV", "CVGROUP", "PROJECT", "ORGANIZATION", "PLATFORM", "MANIFEST", "MAPSET", "MARKER_GROUP", "EXPERIMENT", "REFERENCE", "ROLE", "DISPLAY", "MARKER", "PROTOCOL", "VENDOR_PROTOCOL", "DNASAMPLE", "LINKAGE_GROUP", "DNARUN", "GERMPLASM", "JOB" ]
        },
        "createdBy" : {
          "type" : "integer",
          "format" : "int32"
        },
        "createdDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "modifiedBy" : {
          "type" : "integer",
          "format" : "int32"
        },
        "modifiedDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "markerGroupId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "name" : {
          "type" : "string"
        },
        "code" : {
          "type" : "string"
        },
        "markers" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/MarkerGroupMarkerDTO"
          }
        },
        "germplasmGroup" : {
          "type" : "string"
        },
        "statusId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "markerMap" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "id" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "MarkerGroupMarkerDTO" : {
      "type" : "object",
      "properties" : {
        "gobiiProcessType" : {
          "type" : "string",
          "enum" : [ "CREATE", "READ", "UPDATE", "DELETE", "NONE" ]
        },
        "markerExists" : {
          "type" : "boolean",
          "default" : false
        },
        "markerId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "markerName" : {
          "type" : "string"
        },
        "platformId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "platformName" : {
          "type" : "string"
        },
        "favorableAllele" : {
          "type" : "string"
        }
      }
    },
    "NameIdDTO" : {
      "type" : "object",
      "properties" : {
        "allowedProcessTypes" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string",
            "enum" : [ "CREATE", "READ", "UPDATE", "DELETE", "NONE" ]
          }
        },
        "queryObject" : {
          "type" : "object"
        },
        "entityLasetModified" : {
          "type" : "string",
          "format" : "date-time"
        },
        "gobiiEntityNameType" : {
          "type" : "string",
          "enum" : [ "UNKNOWN", "ANALYSIS", "CONTACT", "DATASET", "CV", "CVGROUP", "PROJECT", "ORGANIZATION", "PLATFORM", "MANIFEST", "MAPSET", "MARKER_GROUP", "EXPERIMENT", "REFERENCE", "ROLE", "DISPLAY", "MARKER", "PROTOCOL", "VENDOR_PROTOCOL", "DNASAMPLE", "LINKAGE_GROUP", "DNARUN", "GERMPLASM", "JOB" ]
        },
        "gobiiFkEntityNameType" : {
          "type" : "string",
          "enum" : [ "UNKNOWN", "ANALYSIS", "CONTACT", "DATASET", "CV", "CVGROUP", "PROJECT", "ORGANIZATION", "PLATFORM", "MANIFEST", "MAPSET", "MARKER_GROUP", "EXPERIMENT", "REFERENCE", "ROLE", "DISPLAY", "MARKER", "PROTOCOL", "VENDOR_PROTOCOL", "DNASAMPLE", "LINKAGE_GROUP", "DNARUN", "GERMPLASM", "JOB" ]
        },
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "fkId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "name" : {
          "type" : "string"
        }
      }
    },
    "OrganizationDTO" : {
      "type" : "object",
      "properties" : {
        "allowedProcessTypes" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string",
            "enum" : [ "CREATE", "READ", "UPDATE", "DELETE", "NONE" ]
          }
        },
        "entityNameType" : {
          "type" : "string",
          "enum" : [ "UNKNOWN", "ANALYSIS", "CONTACT", "DATASET", "CV", "CVGROUP", "PROJECT", "ORGANIZATION", "PLATFORM", "MANIFEST", "MAPSET", "MARKER_GROUP", "EXPERIMENT", "REFERENCE", "ROLE", "DISPLAY", "MARKER", "PROTOCOL", "VENDOR_PROTOCOL", "DNASAMPLE", "LINKAGE_GROUP", "DNARUN", "GERMPLASM", "JOB" ]
        },
        "createdBy" : {
          "type" : "integer",
          "format" : "int32"
        },
        "createdDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "modifiedBy" : {
          "type" : "integer",
          "format" : "int32"
        },
        "modifiedDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "organizationId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "name" : {
          "type" : "string"
        },
        "address" : {
          "type" : "string"
        },
        "website" : {
          "type" : "string"
        },
        "statusId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "vendorProtocols" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/VendorProtocolDTO"
          }
        },
        "id" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "Pagination" : {
      "type" : "object",
      "properties" : {
        "pagedQueryId" : {
          "type" : "string"
        },
        "queryTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "pageSize" : {
          "type" : "integer",
          "format" : "int32"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        },
        "currentPage" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "PayloadAnalysisDTO" : {
      "type" : "object",
      "properties" : {
        "linkCollection" : {
          "$ref" : "#/definitions/LinkCollection"
        },
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AnalysisDTO"
          }
        }
      }
    },
    "PayloadConfigSettingsDTO" : {
      "type" : "object",
      "properties" : {
        "linkCollection" : {
          "$ref" : "#/definitions/LinkCollection"
        },
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ConfigSettingsDTO"
          }
        }
      }
    },
    "PayloadContactDTO" : {
      "type" : "object",
      "properties" : {
        "linkCollection" : {
          "$ref" : "#/definitions/LinkCollection"
        },
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ContactDTO"
          }
        }
      }
    },
    "PayloadCvDTO" : {
      "type" : "object",
      "properties" : {
        "linkCollection" : {
          "$ref" : "#/definitions/LinkCollection"
        },
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CvDTO"
          }
        }
      }
    },
    "PayloadCvGroupDTO" : {
      "type" : "object",
      "properties" : {
        "linkCollection" : {
          "$ref" : "#/definitions/LinkCollection"
        },
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CvGroupDTO"
          }
        }
      }
    },
    "PayloadDataSetDTO" : {
      "type" : "object",
      "properties" : {
        "linkCollection" : {
          "$ref" : "#/definitions/LinkCollection"
        },
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/DataSetDTO"
          }
        }
      }
    },
    "PayloadDisplayDTO" : {
      "type" : "object",
      "properties" : {
        "linkCollection" : {
          "$ref" : "#/definitions/LinkCollection"
        },
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/DisplayDTO"
          }
        }
      }
    },
    "PayloadDnaSampleDTO" : {
      "type" : "object",
      "properties" : {
        "linkCollection" : {
          "$ref" : "#/definitions/LinkCollection"
        },
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/DnaSampleDTO"
          }
        }
      }
    },
    "PayloadEntityStatsDTO" : {
      "type" : "object",
      "properties" : {
        "linkCollection" : {
          "$ref" : "#/definitions/LinkCollection"
        },
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/EntityStatsDTO"
          }
        }
      }
    },
    "PayloadEnvelopeAnalysisDTO" : {
      "type" : "object",
      "properties" : {
        "payload" : {
          "$ref" : "#/definitions/PayloadAnalysisDTO"
        },
        "header" : {
          "$ref" : "#/definitions/Header"
        }
      }
    },
    "PayloadEnvelopeConfigSettingsDTO" : {
      "type" : "object",
      "properties" : {
        "payload" : {
          "$ref" : "#/definitions/PayloadConfigSettingsDTO"
        },
        "header" : {
          "$ref" : "#/definitions/Header"
        }
      }
    },
    "PayloadEnvelopeContactDTO" : {
      "type" : "object",
      "properties" : {
        "payload" : {
          "$ref" : "#/definitions/PayloadContactDTO"
        },
        "header" : {
          "$ref" : "#/definitions/Header"
        }
      }
    },
    "PayloadEnvelopeCvDTO" : {
      "type" : "object",
      "properties" : {
        "payload" : {
          "$ref" : "#/definitions/PayloadCvDTO"
        },
        "header" : {
          "$ref" : "#/definitions/Header"
        }
      }
    },
    "PayloadEnvelopeCvGroupDTO" : {
      "type" : "object",
      "properties" : {
        "payload" : {
          "$ref" : "#/definitions/PayloadCvGroupDTO"
        },
        "header" : {
          "$ref" : "#/definitions/Header"
        }
      }
    },
    "PayloadEnvelopeDataSetDTO" : {
      "type" : "object",
      "properties" : {
        "payload" : {
          "$ref" : "#/definitions/PayloadDataSetDTO"
        },
        "header" : {
          "$ref" : "#/definitions/Header"
        }
      }
    },
    "PayloadEnvelopeDisplayDTO" : {
      "type" : "object",
      "properties" : {
        "payload" : {
          "$ref" : "#/definitions/PayloadDisplayDTO"
        },
        "header" : {
          "$ref" : "#/definitions/Header"
        }
      }
    },
    "PayloadEnvelopeDnaSampleDTO" : {
      "type" : "object",
      "properties" : {
        "payload" : {
          "$ref" : "#/definitions/PayloadDnaSampleDTO"
        },
        "header" : {
          "$ref" : "#/definitions/Header"
        }
      }
    },
    "PayloadEnvelopeEntityStatsDTO" : {
      "type" : "object",
      "properties" : {
        "payload" : {
          "$ref" : "#/definitions/PayloadEntityStatsDTO"
        },
        "header" : {
          "$ref" : "#/definitions/Header"
        }
      }
    },
    "PayloadEnvelopeExperimentDTO" : {
      "type" : "object",
      "properties" : {
        "payload" : {
          "$ref" : "#/definitions/PayloadExperimentDTO"
        },
        "header" : {
          "$ref" : "#/definitions/Header"
        }
      }
    },
    "PayloadEnvelopeExtractorInstructionFilesDTO" : {
      "type" : "object",
      "properties" : {
        "payload" : {
          "$ref" : "#/definitions/PayloadExtractorInstructionFilesDTO"
        },
        "header" : {
          "$ref" : "#/definitions/Header"
        }
      }
    },
    "PayloadEnvelopeJobDTO" : {
      "type" : "object",
      "properties" : {
        "payload" : {
          "$ref" : "#/definitions/PayloadJobDTO"
        },
        "header" : {
          "$ref" : "#/definitions/Header"
        }
      }
    },
    "PayloadEnvelopeLoaderFilePreviewDTO" : {
      "type" : "object",
      "properties" : {
        "payload" : {
          "$ref" : "#/definitions/PayloadLoaderFilePreviewDTO"
        },
        "header" : {
          "$ref" : "#/definitions/Header"
        }
      }
    },
    "PayloadEnvelopeLoaderInstructionFilesDTO" : {
      "type" : "object",
      "properties" : {
        "payload" : {
          "$ref" : "#/definitions/PayloadLoaderInstructionFilesDTO"
        },
        "header" : {
          "$ref" : "#/definitions/Header"
        }
      }
    },
    "PayloadEnvelopeManifestDTO" : {
      "type" : "object",
      "properties" : {
        "payload" : {
          "$ref" : "#/definitions/PayloadManifestDTO"
        },
        "header" : {
          "$ref" : "#/definitions/Header"
        }
      }
    },
    "PayloadEnvelopeMapsetDTO" : {
      "type" : "object",
      "properties" : {
        "payload" : {
          "$ref" : "#/definitions/PayloadMapsetDTO"
        },
        "header" : {
          "$ref" : "#/definitions/Header"
        }
      }
    },
    "PayloadEnvelopeMarkerDTO" : {
      "type" : "object",
      "properties" : {
        "payload" : {
          "$ref" : "#/definitions/PayloadMarkerDTO"
        },
        "header" : {
          "$ref" : "#/definitions/Header"
        }
      }
    },
    "PayloadEnvelopeMarkerGroupDTO" : {
      "type" : "object",
      "properties" : {
        "payload" : {
          "$ref" : "#/definitions/PayloadMarkerGroupDTO"
        },
        "header" : {
          "$ref" : "#/definitions/Header"
        }
      }
    },
    "PayloadEnvelopeNameIdDTO" : {
      "type" : "object",
      "properties" : {
        "payload" : {
          "$ref" : "#/definitions/PayloadNameIdDTO"
        },
        "header" : {
          "$ref" : "#/definitions/Header"
        }
      }
    },
    "PayloadEnvelopeOrganizationDTO" : {
      "type" : "object",
      "properties" : {
        "payload" : {
          "$ref" : "#/definitions/PayloadOrganizationDTO"
        },
        "header" : {
          "$ref" : "#/definitions/Header"
        }
      }
    },
    "PayloadEnvelopePlatformDTO" : {
      "type" : "object",
      "properties" : {
        "payload" : {
          "$ref" : "#/definitions/PayloadPlatformDTO"
        },
        "header" : {
          "$ref" : "#/definitions/Header"
        }
      }
    },
    "PayloadEnvelopeProjectDTO" : {
      "type" : "object",
      "properties" : {
        "payload" : {
          "$ref" : "#/definitions/PayloadProjectDTO"
        },
        "header" : {
          "$ref" : "#/definitions/Header"
        }
      }
    },
    "PayloadEnvelopeProtocolDTO" : {
      "type" : "object",
      "properties" : {
        "payload" : {
          "$ref" : "#/definitions/PayloadProtocolDTO"
        },
        "header" : {
          "$ref" : "#/definitions/Header"
        }
      }
    },
    "PayloadEnvelopeReferenceDTO" : {
      "type" : "object",
      "properties" : {
        "payload" : {
          "$ref" : "#/definitions/PayloadReferenceDTO"
        },
        "header" : {
          "$ref" : "#/definitions/Header"
        }
      }
    },
    "PayloadEnvelopeRestProfileDTO" : {
      "type" : "object",
      "properties" : {
        "payload" : {
          "$ref" : "#/definitions/PayloadRestProfileDTO"
        },
        "header" : {
          "$ref" : "#/definitions/Header"
        }
      }
    },
    "PayloadExperimentDTO" : {
      "type" : "object",
      "properties" : {
        "linkCollection" : {
          "$ref" : "#/definitions/LinkCollection"
        },
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ExperimentDTO"
          }
        }
      }
    },
    "PayloadExtractorInstructionFilesDTO" : {
      "type" : "object",
      "properties" : {
        "linkCollection" : {
          "$ref" : "#/definitions/LinkCollection"
        },
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ExtractorInstructionFilesDTO"
          }
        }
      }
    },
    "PayloadJobDTO" : {
      "type" : "object",
      "properties" : {
        "linkCollection" : {
          "$ref" : "#/definitions/LinkCollection"
        },
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/JobDTO"
          }
        }
      }
    },
    "PayloadLoaderFilePreviewDTO" : {
      "type" : "object",
      "properties" : {
        "linkCollection" : {
          "$ref" : "#/definitions/LinkCollection"
        },
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/LoaderFilePreviewDTO"
          }
        }
      }
    },
    "PayloadLoaderInstructionFilesDTO" : {
      "type" : "object",
      "properties" : {
        "linkCollection" : {
          "$ref" : "#/definitions/LinkCollection"
        },
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/LoaderInstructionFilesDTO"
          }
        }
      }
    },
    "PayloadManifestDTO" : {
      "type" : "object",
      "properties" : {
        "linkCollection" : {
          "$ref" : "#/definitions/LinkCollection"
        },
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ManifestDTO"
          }
        }
      }
    },
    "PayloadMapsetDTO" : {
      "type" : "object",
      "properties" : {
        "linkCollection" : {
          "$ref" : "#/definitions/LinkCollection"
        },
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/MapsetDTO"
          }
        }
      }
    },
    "PayloadMarkerDTO" : {
      "type" : "object",
      "properties" : {
        "linkCollection" : {
          "$ref" : "#/definitions/LinkCollection"
        },
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/MarkerDTO"
          }
        }
      }
    },
    "PayloadMarkerGroupDTO" : {
      "type" : "object",
      "properties" : {
        "linkCollection" : {
          "$ref" : "#/definitions/LinkCollection"
        },
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/MarkerGroupDTO"
          }
        }
      }
    },
    "PayloadNameIdDTO" : {
      "type" : "object",
      "properties" : {
        "linkCollection" : {
          "$ref" : "#/definitions/LinkCollection"
        },
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/NameIdDTO"
          }
        }
      }
    },
    "PayloadOrganizationDTO" : {
      "type" : "object",
      "properties" : {
        "linkCollection" : {
          "$ref" : "#/definitions/LinkCollection"
        },
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OrganizationDTO"
          }
        }
      }
    },
    "PayloadPlatformDTO" : {
      "type" : "object",
      "properties" : {
        "linkCollection" : {
          "$ref" : "#/definitions/LinkCollection"
        },
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PlatformDTO"
          }
        }
      }
    },
    "PayloadProjectDTO" : {
      "type" : "object",
      "properties" : {
        "linkCollection" : {
          "$ref" : "#/definitions/LinkCollection"
        },
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ProjectDTO"
          }
        }
      }
    },
    "PayloadProtocolDTO" : {
      "type" : "object",
      "properties" : {
        "linkCollection" : {
          "$ref" : "#/definitions/LinkCollection"
        },
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ProtocolDTO"
          }
        }
      }
    },
    "PayloadReferenceDTO" : {
      "type" : "object",
      "properties" : {
        "linkCollection" : {
          "$ref" : "#/definitions/LinkCollection"
        },
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ReferenceDTO"
          }
        }
      }
    },
    "PayloadRestProfileDTO" : {
      "type" : "object",
      "properties" : {
        "linkCollection" : {
          "$ref" : "#/definitions/LinkCollection"
        },
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RestProfileDTO"
          }
        }
      }
    },
    "PlatformDTO" : {
      "type" : "object",
      "properties" : {
        "allowedProcessTypes" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string",
            "enum" : [ "CREATE", "READ", "UPDATE", "DELETE", "NONE" ]
          }
        },
        "entityNameType" : {
          "type" : "string",
          "enum" : [ "UNKNOWN", "ANALYSIS", "CONTACT", "DATASET", "CV", "CVGROUP", "PROJECT", "ORGANIZATION", "PLATFORM", "MANIFEST", "MAPSET", "MARKER_GROUP", "EXPERIMENT", "REFERENCE", "ROLE", "DISPLAY", "MARKER", "PROTOCOL", "VENDOR_PROTOCOL", "DNASAMPLE", "LINKAGE_GROUP", "DNARUN", "GERMPLASM", "JOB" ]
        },
        "createdBy" : {
          "type" : "integer",
          "format" : "int32"
        },
        "createdDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "modifiedBy" : {
          "type" : "integer",
          "format" : "int32"
        },
        "modifiedDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "platformId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "platformName" : {
          "type" : "string"
        },
        "platformCode" : {
          "type" : "string"
        },
        "platformDescription" : {
          "type" : "string"
        },
        "statusId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "typeId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "properties" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/EntityPropertyDTO"
          }
        },
        "id" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "ProjectDTO" : {
      "type" : "object",
      "properties" : {
        "allowedProcessTypes" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string",
            "enum" : [ "CREATE", "READ", "UPDATE", "DELETE", "NONE" ]
          }
        },
        "entityNameType" : {
          "type" : "string",
          "enum" : [ "UNKNOWN", "ANALYSIS", "CONTACT", "DATASET", "CV", "CVGROUP", "PROJECT", "ORGANIZATION", "PLATFORM", "MANIFEST", "MAPSET", "MARKER_GROUP", "EXPERIMENT", "REFERENCE", "ROLE", "DISPLAY", "MARKER", "PROTOCOL", "VENDOR_PROTOCOL", "DNASAMPLE", "LINKAGE_GROUP", "DNARUN", "GERMPLASM", "JOB" ]
        },
        "createdBy" : {
          "type" : "integer",
          "format" : "int32"
        },
        "createdDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "modifiedBy" : {
          "type" : "integer",
          "format" : "int32"
        },
        "modifiedDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "projectId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "projectName" : {
          "type" : "string"
        },
        "projectCode" : {
          "type" : "string"
        },
        "projectDescription" : {
          "type" : "string"
        },
        "piContact" : {
          "type" : "integer",
          "format" : "int32"
        },
        "projectStatus" : {
          "type" : "integer",
          "format" : "int32"
        },
        "principleInvestigators" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "properties" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/EntityPropertyDTO"
          }
        },
        "id" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "PropNameId" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "name" : {
          "type" : "string"
        }
      }
    },
    "ProtocolDTO" : {
      "type" : "object",
      "properties" : {
        "allowedProcessTypes" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string",
            "enum" : [ "CREATE", "READ", "UPDATE", "DELETE", "NONE" ]
          }
        },
        "entityNameType" : {
          "type" : "string",
          "enum" : [ "UNKNOWN", "ANALYSIS", "CONTACT", "DATASET", "CV", "CVGROUP", "PROJECT", "ORGANIZATION", "PLATFORM", "MANIFEST", "MAPSET", "MARKER_GROUP", "EXPERIMENT", "REFERENCE", "ROLE", "DISPLAY", "MARKER", "PROTOCOL", "VENDOR_PROTOCOL", "DNASAMPLE", "LINKAGE_GROUP", "DNARUN", "GERMPLASM", "JOB" ]
        },
        "createdBy" : {
          "type" : "integer",
          "format" : "int32"
        },
        "createdDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "modifiedBy" : {
          "type" : "integer",
          "format" : "int32"
        },
        "modifiedDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "protocolId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "typeId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "platformId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "status" : {
          "type" : "integer",
          "format" : "int32"
        },
        "props" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/EntityPropertyDTO"
          }
        },
        "vendorProtocols" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/VendorProtocolDTO"
          }
        },
        "id" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "ReferenceDTO" : {
      "type" : "object",
      "properties" : {
        "allowedProcessTypes" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string",
            "enum" : [ "CREATE", "READ", "UPDATE", "DELETE", "NONE" ]
          }
        },
        "entityNameType" : {
          "type" : "string",
          "enum" : [ "UNKNOWN", "ANALYSIS", "CONTACT", "DATASET", "CV", "CVGROUP", "PROJECT", "ORGANIZATION", "PLATFORM", "MANIFEST", "MAPSET", "MARKER_GROUP", "EXPERIMENT", "REFERENCE", "ROLE", "DISPLAY", "MARKER", "PROTOCOL", "VENDOR_PROTOCOL", "DNASAMPLE", "LINKAGE_GROUP", "DNARUN", "GERMPLASM", "JOB" ]
        },
        "createdBy" : {
          "type" : "integer",
          "format" : "int32"
        },
        "createdDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "modifiedBy" : {
          "type" : "integer",
          "format" : "int32"
        },
        "modifiedDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "referenceId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "name" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "link" : {
          "type" : "string"
        },
        "filePath" : {
          "type" : "string"
        },
        "id" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "RestProfileDTO" : {
      "type" : "object",
      "properties" : {
        "allowedProcessTypes" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string",
            "enum" : [ "CREATE", "READ", "UPDATE", "DELETE", "NONE" ]
          }
        },
        "restResourceId" : {
          "type" : "string",
          "enum" : [ "GOBII_AUTH", "GOBII_PING", "GOBII_PROJECTS", "GOBII_NAME_ID_LIST_DEPRECATED", "GOBII_NAMES", "GOBII_FILE_LOAD", "GOBII_FILE_LOAD_INSTRUCTIONS", "GOBII_FILE_EXTRACTOR_INSTRUCTIONS", "GOBII_FILE_EXTRACTOR_JOBS", "GOBII_FILE_LOADER_JOBS", "GOBII_DISPLAY", "GOBII_CV", "GOBII_CVGROUP", "GOBII_CONTACTS", "GOBII_CONTACT_SEARCH", "GOBII_ORGANIZATION_SEARCH", "GOBII_REFERENCE", "GOBII_EXPERIMENTS", "GOBII_DATASETS", "GOBII_DATASETTYPES", "GOBII_ANALYSIS", "GOBII_MARKERGROUP", "GOBII_MANIFEST", "GOBII_ORGANIZATION", "GOBII_PLATFORM", "GOBII_MAPSET", "GOBII_CONFIGSETTINGS", "GOBII_ROLES", "GOBII_MARKERS", "GOBII_MARKER_SEARCH", "GOBII_CALLS", "GOBII_GERMPLASM", "GOBII_OBSERVATION_VARIABLES", "GOBII_PROTOCOL", "GOBII_VENDORS", "GOBII_FILES", "GOBII_JOB", "GOBII_ENTITIES", "GOBII_COUNT", "GOBII_LAST_MODIFIED", "GOBII_VERTICES", "GOBII_VALUES", "GOBII_REST_PROFILES", "GOBII_DNASAMPLES", "GOBII_DNARUN", "GOBII_LINKAGEGROUP", "GOBII_JOB_DNASAMPLE", "BRAPI_ALLELE_MATRIX_SEARCH", "BRAPI_ALLELE_MATRIX_SEARCH_STATUS", "BRAPI_ALLELE_MATRICES", "KDC_START", "KDC_STATUS", "KDC_DOWNLOAD", "KDC_PURGE", "BRAPI_LOGIN", "BRAPI_STUDIES_SEARCH", "BRAPI_STUDIES", "BRAPI_CALLS" ]
        },
        "restMethodType" : {
          "type" : "string",
          "enum" : [ "GET", "POST", "PUT", "PATCH", "DELETE", "OPTIONS" ]
        },
        "templateParameter" : {
          "type" : "string"
        },
        "max" : {
          "type" : "integer",
          "format" : "int32"
        },
        "id" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "ServerConfigItem" : {
      "type" : "object",
      "properties" : {
        "port" : {
          "type" : "integer",
          "format" : "int32"
        },
        "domain" : {
          "type" : "string"
        },
        "contextRoot" : {
          "type" : "string"
        },
        "gobiiCropType" : {
          "type" : "string"
        },
        "confidentialityNotice" : {
          "type" : "string"
        },
        "fileLocations" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "Status" : {
      "type" : "object",
      "properties" : {
        "succeeded" : {
          "type" : "boolean",
          "default" : false
        },
        "statusMessages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/HeaderStatusMessage"
          }
        },
        "statusMessagesByCode" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "TableColDisplay" : {
      "type" : "object",
      "properties" : {
        "displayId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "columnName" : {
          "type" : "string"
        },
        "displayName" : {
          "type" : "string"
        },
        "rank" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "VcfParameters" : {
      "type" : "object",
      "properties" : {
        "maf" : {
          "type" : "number",
          "format" : "float"
        },
        "minQ" : {
          "type" : "number",
          "format" : "float"
        },
        "minDp" : {
          "type" : "number",
          "format" : "float"
        },
        "removeIndels" : {
          "type" : "boolean",
          "default" : false
        },
        "toIupac" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "VendorProtocolDTO" : {
      "type" : "object",
      "properties" : {
        "allowedProcessTypes" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string",
            "enum" : [ "CREATE", "READ", "UPDATE", "DELETE", "NONE" ]
          }
        },
        "vendorProtocolId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "organizationId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "protocolId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "name" : {
          "type" : "string"
        },
        "status" : {
          "type" : "integer",
          "format" : "int32"
        },
        "id" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    }
  }
}