---
swagger: "2.0"
info:
  description: "The GOBii web service API provides a comprehensive set of RESTful\
    \ methods for accomplishing the following core tasks in the GOBii Genomic Data\
    \ Management (GDM) system. This manual explains the GOBii web architecture and\
    \ its web service operations.\n\n"
  version: "1.0"
  title: "GOBii API"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:8081"
basePath: "/api"
schemes:
- "http"
- null
paths:
  /gobii/v1/analyses:
    get:
      summary: "Gets all the analysis"
      description: "Retrieves an unfiltered list of all Analysis entities. $RequestResponseStructure$"
      operationId: "getAnalyses"
      parameters: []
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeAnalysisDTO"
    post:
      summary: "Creates analysis entity"
      description: "Creates an analysis entity for GOBii system. $RequestResponseStructure$"
      operationId: "createAnalysis"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/PayloadEnvelopeAnalysisDTO"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeAnalysisDTO"
  /gobii/v1/analyses/{analysisId}:
    get:
      summary: "Gets analysis by Analysis ID"
      description: "Retrieves the Analysis entity having the specified ID. $RequestResponseStructure$"
      operationId: "getAnalysisById"
      parameters:
      - name: "analysisId"
        in: "path"
        description: "ID of Analysis to be extracted."
        required: true
        type: "integer"
        pattern: "[\\d]+"
        format: "int32"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeAnalysisDTO"
    put:
      summary: "Updates analysis by Analysis ID"
      description: "Updates the Analysis entity having the specified analysisId. $RequestResponseStructure$"
      operationId: "replaceAnalysis"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/PayloadEnvelopeAnalysisDTO"
      - name: "analysisId"
        in: "path"
        description: "ID of Analysis to be updated"
        required: true
        type: "integer"
        pattern: "[\\d]+"
        format: "int32"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeAnalysisDTO"
  /gobii/v1/auth:
    post:
      summary: "Authentication service for accessing GOBii System"
      description: "The user credentials are specified in the request headers X-Username\
        \ and X-Password; the response and the response headers include the token\
        \ in the X-Auth-Token header. this header and value be included in the request\
        \ headers for subsequent requests. The token value is also supplied in the\
        \ dtoHeaderAuth object."
      operationId: "authenticate"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "string"
  /gobii/v1/configsettings:
    get:
      summary: "Gets the configuration settings for GOBii system"
      description: "Provides generic configuration information about the GOBii instances\
        \ in a given deployment. This call does not require authentication"
      operationId: "getConfigSettings"
      parameters: []
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeConfigSettingsDTO"
  /gobii/v1/contact-search:
    get:
      summary: "/contacts-search"
      description: "Gets contacts by searching for emailid, lastname, firstname, username."
      operationId: "getContactsBySearch"
      parameters:
      - name: "email"
        in: "query"
        description: "contact's email"
        required: true
        type: "string"
      - name: "lastName"
        in: "query"
        description: "contact's last name"
        required: true
        type: "string"
      - name: "firstName"
        in: "query"
        description: "contact's first name"
        required: true
        type: "string"
      - name: "userName"
        in: "query"
        description: "contact's user name"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeContactDTO"
  /gobii/v1/contacts:
    get:
      summary: "Gets all the contacts in the GOBii system"
      description: "Gets all contacts."
      operationId: "getContacts"
      parameters: []
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeContactDTO"
    post:
      summary: "Adds new contact to GOBii system"
      description: "Adds new contact."
      operationId: "createContact"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/PayloadEnvelopeContactDTO"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeContactDTO"
  /gobii/v1/contacts/{contactId}:
    get:
      summary: "Gets contacts by contact ID"
      description: "Gets contacts by contact id."
      operationId: "getContactsById"
      parameters:
      - name: "contactId"
        in: "path"
        description: "ID of contacts to be extracted."
        required: true
        type: "integer"
        pattern: "[\\d]+"
        format: "int32"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeContactDTO"
    put:
      summary: "Updates contacts by contact ID"
      description: "Updates contacts for a given contact id."
      operationId: "replaceContact"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/PayloadEnvelopeContactDTO"
      - name: "contactId"
        in: "path"
        description: "ID of contacts to be updated."
        required: true
        type: "integer"
        pattern: "[\\d]+"
        format: "int32"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeContactDTO"
  /gobii/v1/contacts/{email}:
    get:
      summary: "Gets contacts by email id"
      description: "Gets contacts by email id."
      operationId: "getContactsByEmail"
      parameters:
      - name: "email"
        in: "path"
        description: "email id of contacts to be extracted."
        required: true
        type: "string"
        pattern: "[a-zA-Z-]+@[a-zA-Z-]+.[a-zA-Z-]+"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeContactDTO"
  /gobii/v1/cvs:
    get:
      summary: "/cvs"
      description: "Gets all cvs in the system."
      operationId: "getCvs"
      parameters: []
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeCvDTO"
    post:
      summary: "/cvs"
      description: "Creates new cv's."
      operationId: "createCv"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/PayloadEnvelopeCvDTO"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeCvDTO"
  /gobii/v1/cvs/{cvId}:
    get:
      summary: "/cvs"
      description: "Gets cv by the id."
      operationId: "getCvById"
      parameters:
      - name: "cvId"
        in: "path"
        description: "ID of the CV to be extracted"
        required: true
        type: "integer"
        pattern: "[\\d]+"
        format: "int32"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeCvDTO"
    put:
      summary: "/cvs"
      description: "Updates cv's by cvId."
      operationId: "replaceCv"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/PayloadEnvelopeCvDTO"
      - name: "cvId"
        in: "path"
        description: "ID of the CV to be updated"
        required: true
        type: "integer"
        pattern: "[\\d]+"
        format: "int32"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeCvDTO"
    delete:
      summary: "/cvs"
      description: "Deletes cv by the id."
      operationId: "deleteCv"
      parameters:
      - name: "cvId"
        in: "path"
        description: "ID of cv to be deleted"
        required: true
        type: "integer"
        pattern: "[\\d]+"
        format: "int32"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeCvDTO"
  /gobii/v1/cvs/{groupName}:
    get:
      summary: "/cvs/{groupName:[a-zA-Z_]+}"
      description: "Gets cvs by the group name."
      operationId: "getCvById"
      parameters:
      - name: "groupName"
        in: "path"
        description: "name of cv group to be extracted"
        required: true
        type: "string"
        pattern: "[a-zA-Z_]+"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeCvDTO"
  /gobii/v1/restprofiles:
    put:
      summary: "Gets REST profiles of GOBii system"
      description: "When the Header of the payload envelope for a resource contains\
        \ maxGet, maxPost, and maxPut values, this resource provides a means to update\
        \ the max for a given rest resource ID and for a given HTTP verb. The values\
        \ are transient in the sense that they will be confined only to a specific\
        \ web service deployment. They are stored in the web service configurationdocument"
      operationId: "updateRestProfile"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/PayloadEnvelopeRestProfileDTO"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeRestProfileDTO"
securityDefinitions:
  basicAuth:
    type: "basic"
definitions:
  AnalysisDTO:
    type: "object"
    properties:
      allowedProcessTypes:
        type: "array"
        uniqueItems: true
        items:
          type: "string"
          enum:
          - "CREATE"
          - "READ"
          - "UPDATE"
          - "DELETE"
          - "NONE"
      entityNameType:
        type: "string"
        enum:
        - "UNKNOWN"
        - "ANALYSIS"
        - "CONTACT"
        - "DATASET"
        - "CV"
        - "CVGROUP"
        - "PROJECT"
        - "ORGANIZATION"
        - "PLATFORM"
        - "MANIFEST"
        - "MAPSET"
        - "MARKER_GROUP"
        - "EXPERIMENT"
        - "REFERENCE"
        - "ROLE"
        - "DISPLAY"
        - "MARKER"
        - "PROTOCOL"
        - "VENDOR_PROTOCOL"
        - "DNASAMPLE"
        - "LINKAGE_GROUP"
        - "DNARUN"
        - "GERMPLASM"
        - "JOB"
      createdBy:
        type: "integer"
        format: "int32"
      createdDate:
        type: "string"
        format: "date-time"
      modifiedBy:
        type: "integer"
        format: "int32"
      modifiedDate:
        type: "string"
        format: "date-time"
      analysisId:
        type: "integer"
        format: "int32"
      analysisName:
        type: "string"
      analysisDescription:
        type: "string"
      anlaysisTypeId:
        type: "integer"
        format: "int32"
      program:
        type: "string"
      programVersion:
        type: "string"
      algorithm:
        type: "string"
      sourceName:
        type: "string"
      sourceVersion:
        type: "string"
      sourceUri:
        type: "string"
      referenceId:
        type: "integer"
        format: "int32"
      timeExecuted:
        type: "string"
        format: "date-time"
      statusId:
        type: "integer"
        format: "int32"
      parameters:
        type: "array"
        items:
          $ref: "#/definitions/EntityPropertyDTO"
      id:
        type: "integer"
        format: "int32"
  ConfigSettingsDTO:
    type: "object"
    properties:
      allowedProcessTypes:
        type: "array"
        uniqueItems: true
        items:
          type: "string"
          enum:
          - "CREATE"
          - "READ"
          - "UPDATE"
          - "DELETE"
          - "NONE"
      serverConfigs:
        type: "object"
        additionalProperties:
          $ref: "#/definitions/ServerConfigItem"
      serverCapabilities:
        type: "object"
        additionalProperties:
          type: "boolean"
      maxUploadSizeMbytes:
        type: "integer"
        format: "int32"
      id:
        type: "integer"
        format: "int32"
  ContactDTO:
    type: "object"
    properties:
      allowedProcessTypes:
        type: "array"
        uniqueItems: true
        items:
          type: "string"
          enum:
          - "CREATE"
          - "READ"
          - "UPDATE"
          - "DELETE"
          - "NONE"
      entityNameType:
        type: "string"
        enum:
        - "UNKNOWN"
        - "ANALYSIS"
        - "CONTACT"
        - "DATASET"
        - "CV"
        - "CVGROUP"
        - "PROJECT"
        - "ORGANIZATION"
        - "PLATFORM"
        - "MANIFEST"
        - "MAPSET"
        - "MARKER_GROUP"
        - "EXPERIMENT"
        - "REFERENCE"
        - "ROLE"
        - "DISPLAY"
        - "MARKER"
        - "PROTOCOL"
        - "VENDOR_PROTOCOL"
        - "DNASAMPLE"
        - "LINKAGE_GROUP"
        - "DNARUN"
        - "GERMPLASM"
        - "JOB"
      createdBy:
        type: "integer"
        format: "int32"
      createdDate:
        type: "string"
        format: "date-time"
      modifiedBy:
        type: "integer"
        format: "int32"
      modifiedDate:
        type: "string"
        format: "date-time"
      contactId:
        type: "integer"
        format: "int32"
      lastName:
        type: "string"
      firstName:
        type: "string"
      code:
        type: "string"
      email:
        type: "string"
      roles:
        type: "array"
        items:
          type: "integer"
          format: "int32"
      organizationId:
        type: "integer"
        format: "int32"
      userName:
        type: "string"
      id:
        type: "integer"
        format: "int32"
  CvDTO:
    type: "object"
    properties:
      allowedProcessTypes:
        type: "array"
        uniqueItems: true
        items:
          type: "string"
          enum:
          - "CREATE"
          - "READ"
          - "UPDATE"
          - "DELETE"
          - "NONE"
      groupId:
        type: "integer"
        format: "int32"
      xrefId:
        type: "integer"
        format: "int32"
      entityStatus:
        type: "integer"
        format: "int32"
      term:
        type: "string"
      abbreviation:
        type: "string"
      definition:
        type: "string"
      rank:
        type: "integer"
        format: "int32"
      groupType:
        type: "integer"
        format: "int32"
      id:
        type: "integer"
        format: "int32"
      group:
        type: "integer"
        format: "int32"
      cvId:
        type: "integer"
        format: "int32"
  EntityPropertyDTO:
    type: "object"
    properties:
      entityIdId:
        type: "integer"
        format: "int32"
      propertyId:
        type: "integer"
        format: "int32"
      propertyName:
        type: "string"
      propertyValue:
        type: "string"
  Header:
    type: "object"
    properties:
      gobiiProcessType:
        type: "string"
        enum:
        - "CREATE"
        - "READ"
        - "UPDATE"
        - "DELETE"
        - "NONE"
      dtoHeaderAuth:
        $ref: "#/definitions/HeaderAuth"
      status:
        $ref: "#/definitions/Status"
      pagination:
        $ref: "#/definitions/Pagination"
      maxGet:
        type: "integer"
        format: "int32"
      maxPost:
        type: "integer"
        format: "int32"
      maxPut:
        type: "integer"
        format: "int32"
      gobiiVersion:
        type: "string"
      cropType:
        type: "string"
  HeaderAuth:
    type: "object"
    properties:
      userName:
        type: "string"
      password:
        type: "string"
      token:
        type: "string"
      gobiiCropType:
        type: "string"
  HeaderStatusMessage:
    type: "object"
    properties:
      gobiiStatusLevel:
        type: "string"
        enum:
        - "ERROR"
        - "VALIDATION"
        - "WARNING"
        - "INFO"
        - "OK"
      gobiiValidationStatusType:
        type: "string"
        enum:
        - "NONE"
        - "UNKNOWN"
        - "VALIDATION_COMPOUND_UNIQUE"
        - "VALIDATION_NOT_UNIQUE"
        - "NONEXISTENT_FK_ENTITY"
        - "BAD_REQUEST"
        - "MISSING_REQUIRED_VALUE"
        - "ENTITY_DOES_NOT_EXIST"
        - "ENTITY_ALREADY_EXISTS"
        - "UNKNOWN_ENUM_VALUE"
        - "RESOURCE_LIMIT"
      message:
        type: "string"
  Link:
    type: "object"
    properties:
      href:
        type: "string"
      description:
        type: "string"
      methods:
        type: "array"
        uniqueItems: true
        items:
          type: "string"
          enum:
          - "GET"
          - "POST"
          - "PUT"
          - "PATCH"
          - "DELETE"
          - "OPTIONS"
  LinkCollection:
    type: "object"
    properties:
      linksPerDataItem:
        type: "array"
        items:
          $ref: "#/definitions/Link"
      exploreLinksPerDataItem:
        type: "array"
        items:
          type: "array"
          items:
            $ref: "#/definitions/Link"
  Pagination:
    type: "object"
    properties:
      pagedQueryId:
        type: "string"
      queryTime:
        type: "string"
        format: "date-time"
      pageSize:
        type: "integer"
        format: "int32"
      totalPages:
        type: "integer"
        format: "int32"
      currentPage:
        type: "integer"
        format: "int32"
  PayloadAnalysisDTO:
    type: "object"
    properties:
      linkCollection:
        $ref: "#/definitions/LinkCollection"
      data:
        type: "array"
        items:
          $ref: "#/definitions/AnalysisDTO"
  PayloadConfigSettingsDTO:
    type: "object"
    properties:
      linkCollection:
        $ref: "#/definitions/LinkCollection"
      data:
        type: "array"
        items:
          $ref: "#/definitions/ConfigSettingsDTO"
  PayloadContactDTO:
    type: "object"
    properties:
      linkCollection:
        $ref: "#/definitions/LinkCollection"
      data:
        type: "array"
        items:
          $ref: "#/definitions/ContactDTO"
  PayloadCvDTO:
    type: "object"
    properties:
      linkCollection:
        $ref: "#/definitions/LinkCollection"
      data:
        type: "array"
        items:
          $ref: "#/definitions/CvDTO"
  PayloadEnvelopeAnalysisDTO:
    type: "object"
    properties:
      payload:
        $ref: "#/definitions/PayloadAnalysisDTO"
      header:
        $ref: "#/definitions/Header"
  PayloadEnvelopeConfigSettingsDTO:
    type: "object"
    properties:
      payload:
        $ref: "#/definitions/PayloadConfigSettingsDTO"
      header:
        $ref: "#/definitions/Header"
  PayloadEnvelopeContactDTO:
    type: "object"
    properties:
      payload:
        $ref: "#/definitions/PayloadContactDTO"
      header:
        $ref: "#/definitions/Header"
  PayloadEnvelopeCvDTO:
    type: "object"
    properties:
      payload:
        $ref: "#/definitions/PayloadCvDTO"
      header:
        $ref: "#/definitions/Header"
  PayloadEnvelopeRestProfileDTO:
    type: "object"
    properties:
      payload:
        $ref: "#/definitions/PayloadRestProfileDTO"
      header:
        $ref: "#/definitions/Header"
  PayloadRestProfileDTO:
    type: "object"
    properties:
      linkCollection:
        $ref: "#/definitions/LinkCollection"
      data:
        type: "array"
        items:
          $ref: "#/definitions/RestProfileDTO"
  RestProfileDTO:
    type: "object"
    properties:
      allowedProcessTypes:
        type: "array"
        uniqueItems: true
        items:
          type: "string"
          enum:
          - "CREATE"
          - "READ"
          - "UPDATE"
          - "DELETE"
          - "NONE"
      restResourceId:
        type: "string"
        enum:
        - "GOBII_AUTH"
        - "GOBII_PING"
        - "GOBII_PROJECTS"
        - "GOBII_NAME_ID_LIST_DEPRECATED"
        - "GOBII_NAMES"
        - "GOBII_FILE_LOAD"
        - "GOBII_FILE_LOAD_INSTRUCTIONS"
        - "GOBII_FILE_EXTRACTOR_INSTRUCTIONS"
        - "GOBII_FILE_EXTRACTOR_JOBS"
        - "GOBII_FILE_LOADER_JOBS"
        - "GOBII_DISPLAY"
        - "GOBII_CV"
        - "GOBII_CVGROUP"
        - "GOBII_CONTACTS"
        - "GOBII_CONTACT_SEARCH"
        - "GOBII_ORGANIZATION_SEARCH"
        - "GOBII_REFERENCE"
        - "GOBII_EXPERIMENTS"
        - "GOBII_DATASETS"
        - "GOBII_DATASETTYPES"
        - "GOBII_ANALYSIS"
        - "GOBII_MARKERGROUP"
        - "GOBII_MANIFEST"
        - "GOBII_ORGANIZATION"
        - "GOBII_PLATFORM"
        - "GOBII_MAPSET"
        - "GOBII_CONFIGSETTINGS"
        - "GOBII_ROLES"
        - "GOBII_MARKERS"
        - "GOBII_MARKER_SEARCH"
        - "GOBII_CALLS"
        - "GOBII_GERMPLASM"
        - "GOBII_OBSERVATION_VARIABLES"
        - "GOBII_PROTOCOL"
        - "GOBII_VENDORS"
        - "GOBII_FILES"
        - "GOBII_JOB"
        - "GOBII_ENTITIES"
        - "GOBII_COUNT"
        - "GOBII_LAST_MODIFIED"
        - "GOBII_VERTICES"
        - "GOBII_VALUES"
        - "GOBII_REST_PROFILES"
        - "GOBII_DNASAMPLES"
        - "GOBII_DNARUN"
        - "GOBII_LINKAGEGROUP"
        - "GOBII_JOB_DNASAMPLE"
        - "BRAPI_ALLELE_MATRIX_SEARCH"
        - "BRAPI_ALLELE_MATRIX_SEARCH_STATUS"
        - "BRAPI_ALLELE_MATRICES"
        - "KDC_START"
        - "KDC_STATUS"
        - "KDC_DOWNLOAD"
        - "KDC_PURGE"
        - "BRAPI_LOGIN"
        - "BRAPI_STUDIES_SEARCH"
        - "BRAPI_STUDIES"
        - "BRAPI_CALLS"
      restMethodType:
        type: "string"
        enum:
        - "GET"
        - "POST"
        - "PUT"
        - "PATCH"
        - "DELETE"
        - "OPTIONS"
      templateParameter:
        type: "string"
      max:
        type: "integer"
        format: "int32"
      id:
        type: "integer"
        format: "int32"
  ServerConfigItem:
    type: "object"
    properties:
      port:
        type: "integer"
        format: "int32"
      domain:
        type: "string"
      contextRoot:
        type: "string"
      gobiiCropType:
        type: "string"
      confidentialityNotice:
        type: "string"
      fileLocations:
        type: "object"
        additionalProperties:
          type: "string"
  Status:
    type: "object"
    properties:
      succeeded:
        type: "boolean"
        default: false
      statusMessages:
        type: "array"
        items:
          $ref: "#/definitions/HeaderStatusMessage"
      statusMessagesByCode:
        type: "object"
        additionalProperties:
          type: "string"
